// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data_requests.proto

package io.lightcone.data.requests;

/**
 * Protobuf type {@code io.lightcone.data.requests.OffchainWithdrawalRequest}
 */
public  final class OffchainWithdrawalRequest extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:io.lightcone.data.requests.OffchainWithdrawalRequest)
    OffchainWithdrawalRequestOrBuilder {
  // Use OffchainWithdrawalRequest.newBuilder() to construct.
  private OffchainWithdrawalRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private OffchainWithdrawalRequest() {
    exchangeId_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private OffchainWithdrawalRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            exchangeId_ = input.readUInt32();
            break;
          }
          case 18: {
            io.lightcone.data.types.AccountID.Builder subBuilder = null;
            if (accountId_ != null) {
              subBuilder = accountId_.toBuilder();
            }
            accountId_ = input.readMessage(io.lightcone.data.types.AccountID.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(accountId_);
              accountId_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            io.lightcone.data.types.TokenID.Builder subBuilder = null;
            if (tokenId_ != null) {
              subBuilder = tokenId_.toBuilder();
            }
            tokenId_ = input.readMessage(io.lightcone.data.types.TokenID.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(tokenId_);
              tokenId_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            io.lightcone.data.types.Amount.Builder subBuilder = null;
            if (amount_ != null) {
              subBuilder = amount_.toBuilder();
            }
            amount_ = input.readMessage(io.lightcone.data.types.Amount.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(amount_);
              amount_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            io.lightcone.data.types.AccountID.Builder subBuilder = null;
            if (walletId_ != null) {
              subBuilder = walletId_.toBuilder();
            }
            walletId_ = input.readMessage(io.lightcone.data.types.AccountID.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(walletId_);
              walletId_ = subBuilder.buildPartial();
            }

            break;
          }
          case 50: {
            io.lightcone.data.types.TokenID.Builder subBuilder = null;
            if (tokenF_ != null) {
              subBuilder = tokenF_.toBuilder();
            }
            tokenF_ = input.readMessage(io.lightcone.data.types.TokenID.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(tokenF_);
              tokenF_ = subBuilder.buildPartial();
            }

            break;
          }
          case 58: {
            io.lightcone.data.types.Amount.Builder subBuilder = null;
            if (amountF_ != null) {
              subBuilder = amountF_.toBuilder();
            }
            amountF_ = input.readMessage(io.lightcone.data.types.Amount.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(amountF_);
              amountF_ = subBuilder.buildPartial();
            }

            break;
          }
          case 66: {
            io.lightcone.data.types.Percentage.Builder subBuilder = null;
            if (walletSplit_ != null) {
              subBuilder = walletSplit_.toBuilder();
            }
            walletSplit_ = input.readMessage(io.lightcone.data.types.Percentage.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(walletSplit_);
              walletSplit_ = subBuilder.buildPartial();
            }

            break;
          }
          case 74: {
            io.lightcone.data.types.Nonce.Builder subBuilder = null;
            if (nonce_ != null) {
              subBuilder = nonce_.toBuilder();
            }
            nonce_ = input.readMessage(io.lightcone.data.types.Nonce.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(nonce_);
              nonce_ = subBuilder.buildPartial();
            }

            break;
          }
          case 82: {
            io.lightcone.data.types.EdDSASignature.Builder subBuilder = null;
            if (sig_ != null) {
              subBuilder = sig_.toBuilder();
            }
            sig_ = input.readMessage(io.lightcone.data.types.EdDSASignature.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(sig_);
              sig_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw new RuntimeException(e.setUnfinishedMessage(this));
    } catch (java.io.IOException e) {
      throw new RuntimeException(
          new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this));
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.lightcone.data.requests.DataRequests.internal_static_io_lightcone_data_requests_OffchainWithdrawalRequest_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.lightcone.data.requests.DataRequests.internal_static_io_lightcone_data_requests_OffchainWithdrawalRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.lightcone.data.requests.OffchainWithdrawalRequest.class, io.lightcone.data.requests.OffchainWithdrawalRequest.Builder.class);
  }

  public static final int EXCHANGE_ID_FIELD_NUMBER = 1;
  private int exchangeId_;
  /**
   * <code>optional uint32 exchange_id = 1;</code>
   */
  public int getExchangeId() {
    return exchangeId_;
  }

  public static final int ACCOUNT_ID_FIELD_NUMBER = 2;
  private io.lightcone.data.types.AccountID accountId_;
  /**
   * <code>optional .io.lightcone.data.types.AccountID account_id = 2;</code>
   */
  public boolean hasAccountId() {
    return accountId_ != null;
  }
  /**
   * <code>optional .io.lightcone.data.types.AccountID account_id = 2;</code>
   */
  public io.lightcone.data.types.AccountID getAccountId() {
    return accountId_ == null ? io.lightcone.data.types.AccountID.getDefaultInstance() : accountId_;
  }
  /**
   * <code>optional .io.lightcone.data.types.AccountID account_id = 2;</code>
   */
  public io.lightcone.data.types.AccountIDOrBuilder getAccountIdOrBuilder() {
    return getAccountId();
  }

  public static final int TOKEN_ID_FIELD_NUMBER = 3;
  private io.lightcone.data.types.TokenID tokenId_;
  /**
   * <code>optional .io.lightcone.data.types.TokenID token_id = 3;</code>
   */
  public boolean hasTokenId() {
    return tokenId_ != null;
  }
  /**
   * <code>optional .io.lightcone.data.types.TokenID token_id = 3;</code>
   */
  public io.lightcone.data.types.TokenID getTokenId() {
    return tokenId_ == null ? io.lightcone.data.types.TokenID.getDefaultInstance() : tokenId_;
  }
  /**
   * <code>optional .io.lightcone.data.types.TokenID token_id = 3;</code>
   */
  public io.lightcone.data.types.TokenIDOrBuilder getTokenIdOrBuilder() {
    return getTokenId();
  }

  public static final int AMOUNT_FIELD_NUMBER = 4;
  private io.lightcone.data.types.Amount amount_;
  /**
   * <code>optional .io.lightcone.data.types.Amount amount = 4;</code>
   */
  public boolean hasAmount() {
    return amount_ != null;
  }
  /**
   * <code>optional .io.lightcone.data.types.Amount amount = 4;</code>
   */
  public io.lightcone.data.types.Amount getAmount() {
    return amount_ == null ? io.lightcone.data.types.Amount.getDefaultInstance() : amount_;
  }
  /**
   * <code>optional .io.lightcone.data.types.Amount amount = 4;</code>
   */
  public io.lightcone.data.types.AmountOrBuilder getAmountOrBuilder() {
    return getAmount();
  }

  public static final int WALLET_ID_FIELD_NUMBER = 5;
  private io.lightcone.data.types.AccountID walletId_;
  /**
   * <code>optional .io.lightcone.data.types.AccountID wallet_id = 5;</code>
   */
  public boolean hasWalletId() {
    return walletId_ != null;
  }
  /**
   * <code>optional .io.lightcone.data.types.AccountID wallet_id = 5;</code>
   */
  public io.lightcone.data.types.AccountID getWalletId() {
    return walletId_ == null ? io.lightcone.data.types.AccountID.getDefaultInstance() : walletId_;
  }
  /**
   * <code>optional .io.lightcone.data.types.AccountID wallet_id = 5;</code>
   */
  public io.lightcone.data.types.AccountIDOrBuilder getWalletIdOrBuilder() {
    return getWalletId();
  }

  public static final int TOKEN_F_FIELD_NUMBER = 6;
  private io.lightcone.data.types.TokenID tokenF_;
  /**
   * <code>optional .io.lightcone.data.types.TokenID token_f = 6;</code>
   */
  public boolean hasTokenF() {
    return tokenF_ != null;
  }
  /**
   * <code>optional .io.lightcone.data.types.TokenID token_f = 6;</code>
   */
  public io.lightcone.data.types.TokenID getTokenF() {
    return tokenF_ == null ? io.lightcone.data.types.TokenID.getDefaultInstance() : tokenF_;
  }
  /**
   * <code>optional .io.lightcone.data.types.TokenID token_f = 6;</code>
   */
  public io.lightcone.data.types.TokenIDOrBuilder getTokenFOrBuilder() {
    return getTokenF();
  }

  public static final int AMOUNT_F_FIELD_NUMBER = 7;
  private io.lightcone.data.types.Amount amountF_;
  /**
   * <code>optional .io.lightcone.data.types.Amount amount_f = 7;</code>
   */
  public boolean hasAmountF() {
    return amountF_ != null;
  }
  /**
   * <code>optional .io.lightcone.data.types.Amount amount_f = 7;</code>
   */
  public io.lightcone.data.types.Amount getAmountF() {
    return amountF_ == null ? io.lightcone.data.types.Amount.getDefaultInstance() : amountF_;
  }
  /**
   * <code>optional .io.lightcone.data.types.Amount amount_f = 7;</code>
   */
  public io.lightcone.data.types.AmountOrBuilder getAmountFOrBuilder() {
    return getAmountF();
  }

  public static final int WALLET_SPLIT_FIELD_NUMBER = 8;
  private io.lightcone.data.types.Percentage walletSplit_;
  /**
   * <code>optional .io.lightcone.data.types.Percentage wallet_split = 8;</code>
   */
  public boolean hasWalletSplit() {
    return walletSplit_ != null;
  }
  /**
   * <code>optional .io.lightcone.data.types.Percentage wallet_split = 8;</code>
   */
  public io.lightcone.data.types.Percentage getWalletSplit() {
    return walletSplit_ == null ? io.lightcone.data.types.Percentage.getDefaultInstance() : walletSplit_;
  }
  /**
   * <code>optional .io.lightcone.data.types.Percentage wallet_split = 8;</code>
   */
  public io.lightcone.data.types.PercentageOrBuilder getWalletSplitOrBuilder() {
    return getWalletSplit();
  }

  public static final int NONCE_FIELD_NUMBER = 9;
  private io.lightcone.data.types.Nonce nonce_;
  /**
   * <code>optional .io.lightcone.data.types.Nonce nonce = 9;</code>
   */
  public boolean hasNonce() {
    return nonce_ != null;
  }
  /**
   * <code>optional .io.lightcone.data.types.Nonce nonce = 9;</code>
   */
  public io.lightcone.data.types.Nonce getNonce() {
    return nonce_ == null ? io.lightcone.data.types.Nonce.getDefaultInstance() : nonce_;
  }
  /**
   * <code>optional .io.lightcone.data.types.Nonce nonce = 9;</code>
   */
  public io.lightcone.data.types.NonceOrBuilder getNonceOrBuilder() {
    return getNonce();
  }

  public static final int SIG_FIELD_NUMBER = 10;
  private io.lightcone.data.types.EdDSASignature sig_;
  /**
   * <code>optional .io.lightcone.data.types.EdDSASignature sig = 10;</code>
   */
  public boolean hasSig() {
    return sig_ != null;
  }
  /**
   * <code>optional .io.lightcone.data.types.EdDSASignature sig = 10;</code>
   */
  public io.lightcone.data.types.EdDSASignature getSig() {
    return sig_ == null ? io.lightcone.data.types.EdDSASignature.getDefaultInstance() : sig_;
  }
  /**
   * <code>optional .io.lightcone.data.types.EdDSASignature sig = 10;</code>
   */
  public io.lightcone.data.types.EdDSASignatureOrBuilder getSigOrBuilder() {
    return getSig();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (exchangeId_ != 0) {
      output.writeUInt32(1, exchangeId_);
    }
    if (accountId_ != null) {
      output.writeMessage(2, getAccountId());
    }
    if (tokenId_ != null) {
      output.writeMessage(3, getTokenId());
    }
    if (amount_ != null) {
      output.writeMessage(4, getAmount());
    }
    if (walletId_ != null) {
      output.writeMessage(5, getWalletId());
    }
    if (tokenF_ != null) {
      output.writeMessage(6, getTokenF());
    }
    if (amountF_ != null) {
      output.writeMessage(7, getAmountF());
    }
    if (walletSplit_ != null) {
      output.writeMessage(8, getWalletSplit());
    }
    if (nonce_ != null) {
      output.writeMessage(9, getNonce());
    }
    if (sig_ != null) {
      output.writeMessage(10, getSig());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (exchangeId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(1, exchangeId_);
    }
    if (accountId_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getAccountId());
    }
    if (tokenId_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getTokenId());
    }
    if (amount_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getAmount());
    }
    if (walletId_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getWalletId());
    }
    if (tokenF_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getTokenF());
    }
    if (amountF_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getAmountF());
    }
    if (walletSplit_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getWalletSplit());
    }
    if (nonce_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, getNonce());
    }
    if (sig_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, getSig());
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  public static io.lightcone.data.requests.OffchainWithdrawalRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.lightcone.data.requests.OffchainWithdrawalRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.lightcone.data.requests.OffchainWithdrawalRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.lightcone.data.requests.OffchainWithdrawalRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.lightcone.data.requests.OffchainWithdrawalRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static io.lightcone.data.requests.OffchainWithdrawalRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static io.lightcone.data.requests.OffchainWithdrawalRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static io.lightcone.data.requests.OffchainWithdrawalRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static io.lightcone.data.requests.OffchainWithdrawalRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static io.lightcone.data.requests.OffchainWithdrawalRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.lightcone.data.requests.OffchainWithdrawalRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code io.lightcone.data.requests.OffchainWithdrawalRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:io.lightcone.data.requests.OffchainWithdrawalRequest)
      io.lightcone.data.requests.OffchainWithdrawalRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.lightcone.data.requests.DataRequests.internal_static_io_lightcone_data_requests_OffchainWithdrawalRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.lightcone.data.requests.DataRequests.internal_static_io_lightcone_data_requests_OffchainWithdrawalRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.lightcone.data.requests.OffchainWithdrawalRequest.class, io.lightcone.data.requests.OffchainWithdrawalRequest.Builder.class);
    }

    // Construct using io.lightcone.data.requests.OffchainWithdrawalRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      exchangeId_ = 0;

      if (accountIdBuilder_ == null) {
        accountId_ = null;
      } else {
        accountId_ = null;
        accountIdBuilder_ = null;
      }
      if (tokenIdBuilder_ == null) {
        tokenId_ = null;
      } else {
        tokenId_ = null;
        tokenIdBuilder_ = null;
      }
      if (amountBuilder_ == null) {
        amount_ = null;
      } else {
        amount_ = null;
        amountBuilder_ = null;
      }
      if (walletIdBuilder_ == null) {
        walletId_ = null;
      } else {
        walletId_ = null;
        walletIdBuilder_ = null;
      }
      if (tokenFBuilder_ == null) {
        tokenF_ = null;
      } else {
        tokenF_ = null;
        tokenFBuilder_ = null;
      }
      if (amountFBuilder_ == null) {
        amountF_ = null;
      } else {
        amountF_ = null;
        amountFBuilder_ = null;
      }
      if (walletSplitBuilder_ == null) {
        walletSplit_ = null;
      } else {
        walletSplit_ = null;
        walletSplitBuilder_ = null;
      }
      if (nonceBuilder_ == null) {
        nonce_ = null;
      } else {
        nonce_ = null;
        nonceBuilder_ = null;
      }
      if (sigBuilder_ == null) {
        sig_ = null;
      } else {
        sig_ = null;
        sigBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.lightcone.data.requests.DataRequests.internal_static_io_lightcone_data_requests_OffchainWithdrawalRequest_descriptor;
    }

    public io.lightcone.data.requests.OffchainWithdrawalRequest getDefaultInstanceForType() {
      return io.lightcone.data.requests.OffchainWithdrawalRequest.getDefaultInstance();
    }

    public io.lightcone.data.requests.OffchainWithdrawalRequest build() {
      io.lightcone.data.requests.OffchainWithdrawalRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public io.lightcone.data.requests.OffchainWithdrawalRequest buildPartial() {
      io.lightcone.data.requests.OffchainWithdrawalRequest result = new io.lightcone.data.requests.OffchainWithdrawalRequest(this);
      result.exchangeId_ = exchangeId_;
      if (accountIdBuilder_ == null) {
        result.accountId_ = accountId_;
      } else {
        result.accountId_ = accountIdBuilder_.build();
      }
      if (tokenIdBuilder_ == null) {
        result.tokenId_ = tokenId_;
      } else {
        result.tokenId_ = tokenIdBuilder_.build();
      }
      if (amountBuilder_ == null) {
        result.amount_ = amount_;
      } else {
        result.amount_ = amountBuilder_.build();
      }
      if (walletIdBuilder_ == null) {
        result.walletId_ = walletId_;
      } else {
        result.walletId_ = walletIdBuilder_.build();
      }
      if (tokenFBuilder_ == null) {
        result.tokenF_ = tokenF_;
      } else {
        result.tokenF_ = tokenFBuilder_.build();
      }
      if (amountFBuilder_ == null) {
        result.amountF_ = amountF_;
      } else {
        result.amountF_ = amountFBuilder_.build();
      }
      if (walletSplitBuilder_ == null) {
        result.walletSplit_ = walletSplit_;
      } else {
        result.walletSplit_ = walletSplitBuilder_.build();
      }
      if (nonceBuilder_ == null) {
        result.nonce_ = nonce_;
      } else {
        result.nonce_ = nonceBuilder_.build();
      }
      if (sigBuilder_ == null) {
        result.sig_ = sig_;
      } else {
        result.sig_ = sigBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.lightcone.data.requests.OffchainWithdrawalRequest) {
        return mergeFrom((io.lightcone.data.requests.OffchainWithdrawalRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.lightcone.data.requests.OffchainWithdrawalRequest other) {
      if (other == io.lightcone.data.requests.OffchainWithdrawalRequest.getDefaultInstance()) return this;
      if (other.getExchangeId() != 0) {
        setExchangeId(other.getExchangeId());
      }
      if (other.hasAccountId()) {
        mergeAccountId(other.getAccountId());
      }
      if (other.hasTokenId()) {
        mergeTokenId(other.getTokenId());
      }
      if (other.hasAmount()) {
        mergeAmount(other.getAmount());
      }
      if (other.hasWalletId()) {
        mergeWalletId(other.getWalletId());
      }
      if (other.hasTokenF()) {
        mergeTokenF(other.getTokenF());
      }
      if (other.hasAmountF()) {
        mergeAmountF(other.getAmountF());
      }
      if (other.hasWalletSplit()) {
        mergeWalletSplit(other.getWalletSplit());
      }
      if (other.hasNonce()) {
        mergeNonce(other.getNonce());
      }
      if (other.hasSig()) {
        mergeSig(other.getSig());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.lightcone.data.requests.OffchainWithdrawalRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.lightcone.data.requests.OffchainWithdrawalRequest) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int exchangeId_ ;
    /**
     * <code>optional uint32 exchange_id = 1;</code>
     */
    public int getExchangeId() {
      return exchangeId_;
    }
    /**
     * <code>optional uint32 exchange_id = 1;</code>
     */
    public Builder setExchangeId(int value) {
      
      exchangeId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional uint32 exchange_id = 1;</code>
     */
    public Builder clearExchangeId() {
      
      exchangeId_ = 0;
      onChanged();
      return this;
    }

    private io.lightcone.data.types.AccountID accountId_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.AccountID, io.lightcone.data.types.AccountID.Builder, io.lightcone.data.types.AccountIDOrBuilder> accountIdBuilder_;
    /**
     * <code>optional .io.lightcone.data.types.AccountID account_id = 2;</code>
     */
    public boolean hasAccountId() {
      return accountIdBuilder_ != null || accountId_ != null;
    }
    /**
     * <code>optional .io.lightcone.data.types.AccountID account_id = 2;</code>
     */
    public io.lightcone.data.types.AccountID getAccountId() {
      if (accountIdBuilder_ == null) {
        return accountId_ == null ? io.lightcone.data.types.AccountID.getDefaultInstance() : accountId_;
      } else {
        return accountIdBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.AccountID account_id = 2;</code>
     */
    public Builder setAccountId(io.lightcone.data.types.AccountID value) {
      if (accountIdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        accountId_ = value;
        onChanged();
      } else {
        accountIdBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.AccountID account_id = 2;</code>
     */
    public Builder setAccountId(
        io.lightcone.data.types.AccountID.Builder builderForValue) {
      if (accountIdBuilder_ == null) {
        accountId_ = builderForValue.build();
        onChanged();
      } else {
        accountIdBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.AccountID account_id = 2;</code>
     */
    public Builder mergeAccountId(io.lightcone.data.types.AccountID value) {
      if (accountIdBuilder_ == null) {
        if (accountId_ != null) {
          accountId_ =
            io.lightcone.data.types.AccountID.newBuilder(accountId_).mergeFrom(value).buildPartial();
        } else {
          accountId_ = value;
        }
        onChanged();
      } else {
        accountIdBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.AccountID account_id = 2;</code>
     */
    public Builder clearAccountId() {
      if (accountIdBuilder_ == null) {
        accountId_ = null;
        onChanged();
      } else {
        accountId_ = null;
        accountIdBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.AccountID account_id = 2;</code>
     */
    public io.lightcone.data.types.AccountID.Builder getAccountIdBuilder() {
      
      onChanged();
      return getAccountIdFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .io.lightcone.data.types.AccountID account_id = 2;</code>
     */
    public io.lightcone.data.types.AccountIDOrBuilder getAccountIdOrBuilder() {
      if (accountIdBuilder_ != null) {
        return accountIdBuilder_.getMessageOrBuilder();
      } else {
        return accountId_ == null ?
            io.lightcone.data.types.AccountID.getDefaultInstance() : accountId_;
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.AccountID account_id = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.AccountID, io.lightcone.data.types.AccountID.Builder, io.lightcone.data.types.AccountIDOrBuilder> 
        getAccountIdFieldBuilder() {
      if (accountIdBuilder_ == null) {
        accountIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.lightcone.data.types.AccountID, io.lightcone.data.types.AccountID.Builder, io.lightcone.data.types.AccountIDOrBuilder>(
                getAccountId(),
                getParentForChildren(),
                isClean());
        accountId_ = null;
      }
      return accountIdBuilder_;
    }

    private io.lightcone.data.types.TokenID tokenId_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.TokenID, io.lightcone.data.types.TokenID.Builder, io.lightcone.data.types.TokenIDOrBuilder> tokenIdBuilder_;
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_id = 3;</code>
     */
    public boolean hasTokenId() {
      return tokenIdBuilder_ != null || tokenId_ != null;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_id = 3;</code>
     */
    public io.lightcone.data.types.TokenID getTokenId() {
      if (tokenIdBuilder_ == null) {
        return tokenId_ == null ? io.lightcone.data.types.TokenID.getDefaultInstance() : tokenId_;
      } else {
        return tokenIdBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_id = 3;</code>
     */
    public Builder setTokenId(io.lightcone.data.types.TokenID value) {
      if (tokenIdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        tokenId_ = value;
        onChanged();
      } else {
        tokenIdBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_id = 3;</code>
     */
    public Builder setTokenId(
        io.lightcone.data.types.TokenID.Builder builderForValue) {
      if (tokenIdBuilder_ == null) {
        tokenId_ = builderForValue.build();
        onChanged();
      } else {
        tokenIdBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_id = 3;</code>
     */
    public Builder mergeTokenId(io.lightcone.data.types.TokenID value) {
      if (tokenIdBuilder_ == null) {
        if (tokenId_ != null) {
          tokenId_ =
            io.lightcone.data.types.TokenID.newBuilder(tokenId_).mergeFrom(value).buildPartial();
        } else {
          tokenId_ = value;
        }
        onChanged();
      } else {
        tokenIdBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_id = 3;</code>
     */
    public Builder clearTokenId() {
      if (tokenIdBuilder_ == null) {
        tokenId_ = null;
        onChanged();
      } else {
        tokenId_ = null;
        tokenIdBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_id = 3;</code>
     */
    public io.lightcone.data.types.TokenID.Builder getTokenIdBuilder() {
      
      onChanged();
      return getTokenIdFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_id = 3;</code>
     */
    public io.lightcone.data.types.TokenIDOrBuilder getTokenIdOrBuilder() {
      if (tokenIdBuilder_ != null) {
        return tokenIdBuilder_.getMessageOrBuilder();
      } else {
        return tokenId_ == null ?
            io.lightcone.data.types.TokenID.getDefaultInstance() : tokenId_;
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_id = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.TokenID, io.lightcone.data.types.TokenID.Builder, io.lightcone.data.types.TokenIDOrBuilder> 
        getTokenIdFieldBuilder() {
      if (tokenIdBuilder_ == null) {
        tokenIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.lightcone.data.types.TokenID, io.lightcone.data.types.TokenID.Builder, io.lightcone.data.types.TokenIDOrBuilder>(
                getTokenId(),
                getParentForChildren(),
                isClean());
        tokenId_ = null;
      }
      return tokenIdBuilder_;
    }

    private io.lightcone.data.types.Amount amount_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.Amount, io.lightcone.data.types.Amount.Builder, io.lightcone.data.types.AmountOrBuilder> amountBuilder_;
    /**
     * <code>optional .io.lightcone.data.types.Amount amount = 4;</code>
     */
    public boolean hasAmount() {
      return amountBuilder_ != null || amount_ != null;
    }
    /**
     * <code>optional .io.lightcone.data.types.Amount amount = 4;</code>
     */
    public io.lightcone.data.types.Amount getAmount() {
      if (amountBuilder_ == null) {
        return amount_ == null ? io.lightcone.data.types.Amount.getDefaultInstance() : amount_;
      } else {
        return amountBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.Amount amount = 4;</code>
     */
    public Builder setAmount(io.lightcone.data.types.Amount value) {
      if (amountBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        amount_ = value;
        onChanged();
      } else {
        amountBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Amount amount = 4;</code>
     */
    public Builder setAmount(
        io.lightcone.data.types.Amount.Builder builderForValue) {
      if (amountBuilder_ == null) {
        amount_ = builderForValue.build();
        onChanged();
      } else {
        amountBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Amount amount = 4;</code>
     */
    public Builder mergeAmount(io.lightcone.data.types.Amount value) {
      if (amountBuilder_ == null) {
        if (amount_ != null) {
          amount_ =
            io.lightcone.data.types.Amount.newBuilder(amount_).mergeFrom(value).buildPartial();
        } else {
          amount_ = value;
        }
        onChanged();
      } else {
        amountBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Amount amount = 4;</code>
     */
    public Builder clearAmount() {
      if (amountBuilder_ == null) {
        amount_ = null;
        onChanged();
      } else {
        amount_ = null;
        amountBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Amount amount = 4;</code>
     */
    public io.lightcone.data.types.Amount.Builder getAmountBuilder() {
      
      onChanged();
      return getAmountFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .io.lightcone.data.types.Amount amount = 4;</code>
     */
    public io.lightcone.data.types.AmountOrBuilder getAmountOrBuilder() {
      if (amountBuilder_ != null) {
        return amountBuilder_.getMessageOrBuilder();
      } else {
        return amount_ == null ?
            io.lightcone.data.types.Amount.getDefaultInstance() : amount_;
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.Amount amount = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.Amount, io.lightcone.data.types.Amount.Builder, io.lightcone.data.types.AmountOrBuilder> 
        getAmountFieldBuilder() {
      if (amountBuilder_ == null) {
        amountBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.lightcone.data.types.Amount, io.lightcone.data.types.Amount.Builder, io.lightcone.data.types.AmountOrBuilder>(
                getAmount(),
                getParentForChildren(),
                isClean());
        amount_ = null;
      }
      return amountBuilder_;
    }

    private io.lightcone.data.types.AccountID walletId_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.AccountID, io.lightcone.data.types.AccountID.Builder, io.lightcone.data.types.AccountIDOrBuilder> walletIdBuilder_;
    /**
     * <code>optional .io.lightcone.data.types.AccountID wallet_id = 5;</code>
     */
    public boolean hasWalletId() {
      return walletIdBuilder_ != null || walletId_ != null;
    }
    /**
     * <code>optional .io.lightcone.data.types.AccountID wallet_id = 5;</code>
     */
    public io.lightcone.data.types.AccountID getWalletId() {
      if (walletIdBuilder_ == null) {
        return walletId_ == null ? io.lightcone.data.types.AccountID.getDefaultInstance() : walletId_;
      } else {
        return walletIdBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.AccountID wallet_id = 5;</code>
     */
    public Builder setWalletId(io.lightcone.data.types.AccountID value) {
      if (walletIdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        walletId_ = value;
        onChanged();
      } else {
        walletIdBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.AccountID wallet_id = 5;</code>
     */
    public Builder setWalletId(
        io.lightcone.data.types.AccountID.Builder builderForValue) {
      if (walletIdBuilder_ == null) {
        walletId_ = builderForValue.build();
        onChanged();
      } else {
        walletIdBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.AccountID wallet_id = 5;</code>
     */
    public Builder mergeWalletId(io.lightcone.data.types.AccountID value) {
      if (walletIdBuilder_ == null) {
        if (walletId_ != null) {
          walletId_ =
            io.lightcone.data.types.AccountID.newBuilder(walletId_).mergeFrom(value).buildPartial();
        } else {
          walletId_ = value;
        }
        onChanged();
      } else {
        walletIdBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.AccountID wallet_id = 5;</code>
     */
    public Builder clearWalletId() {
      if (walletIdBuilder_ == null) {
        walletId_ = null;
        onChanged();
      } else {
        walletId_ = null;
        walletIdBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.AccountID wallet_id = 5;</code>
     */
    public io.lightcone.data.types.AccountID.Builder getWalletIdBuilder() {
      
      onChanged();
      return getWalletIdFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .io.lightcone.data.types.AccountID wallet_id = 5;</code>
     */
    public io.lightcone.data.types.AccountIDOrBuilder getWalletIdOrBuilder() {
      if (walletIdBuilder_ != null) {
        return walletIdBuilder_.getMessageOrBuilder();
      } else {
        return walletId_ == null ?
            io.lightcone.data.types.AccountID.getDefaultInstance() : walletId_;
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.AccountID wallet_id = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.AccountID, io.lightcone.data.types.AccountID.Builder, io.lightcone.data.types.AccountIDOrBuilder> 
        getWalletIdFieldBuilder() {
      if (walletIdBuilder_ == null) {
        walletIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.lightcone.data.types.AccountID, io.lightcone.data.types.AccountID.Builder, io.lightcone.data.types.AccountIDOrBuilder>(
                getWalletId(),
                getParentForChildren(),
                isClean());
        walletId_ = null;
      }
      return walletIdBuilder_;
    }

    private io.lightcone.data.types.TokenID tokenF_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.TokenID, io.lightcone.data.types.TokenID.Builder, io.lightcone.data.types.TokenIDOrBuilder> tokenFBuilder_;
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_f = 6;</code>
     */
    public boolean hasTokenF() {
      return tokenFBuilder_ != null || tokenF_ != null;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_f = 6;</code>
     */
    public io.lightcone.data.types.TokenID getTokenF() {
      if (tokenFBuilder_ == null) {
        return tokenF_ == null ? io.lightcone.data.types.TokenID.getDefaultInstance() : tokenF_;
      } else {
        return tokenFBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_f = 6;</code>
     */
    public Builder setTokenF(io.lightcone.data.types.TokenID value) {
      if (tokenFBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        tokenF_ = value;
        onChanged();
      } else {
        tokenFBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_f = 6;</code>
     */
    public Builder setTokenF(
        io.lightcone.data.types.TokenID.Builder builderForValue) {
      if (tokenFBuilder_ == null) {
        tokenF_ = builderForValue.build();
        onChanged();
      } else {
        tokenFBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_f = 6;</code>
     */
    public Builder mergeTokenF(io.lightcone.data.types.TokenID value) {
      if (tokenFBuilder_ == null) {
        if (tokenF_ != null) {
          tokenF_ =
            io.lightcone.data.types.TokenID.newBuilder(tokenF_).mergeFrom(value).buildPartial();
        } else {
          tokenF_ = value;
        }
        onChanged();
      } else {
        tokenFBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_f = 6;</code>
     */
    public Builder clearTokenF() {
      if (tokenFBuilder_ == null) {
        tokenF_ = null;
        onChanged();
      } else {
        tokenF_ = null;
        tokenFBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_f = 6;</code>
     */
    public io.lightcone.data.types.TokenID.Builder getTokenFBuilder() {
      
      onChanged();
      return getTokenFFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_f = 6;</code>
     */
    public io.lightcone.data.types.TokenIDOrBuilder getTokenFOrBuilder() {
      if (tokenFBuilder_ != null) {
        return tokenFBuilder_.getMessageOrBuilder();
      } else {
        return tokenF_ == null ?
            io.lightcone.data.types.TokenID.getDefaultInstance() : tokenF_;
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_f = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.TokenID, io.lightcone.data.types.TokenID.Builder, io.lightcone.data.types.TokenIDOrBuilder> 
        getTokenFFieldBuilder() {
      if (tokenFBuilder_ == null) {
        tokenFBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.lightcone.data.types.TokenID, io.lightcone.data.types.TokenID.Builder, io.lightcone.data.types.TokenIDOrBuilder>(
                getTokenF(),
                getParentForChildren(),
                isClean());
        tokenF_ = null;
      }
      return tokenFBuilder_;
    }

    private io.lightcone.data.types.Amount amountF_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.Amount, io.lightcone.data.types.Amount.Builder, io.lightcone.data.types.AmountOrBuilder> amountFBuilder_;
    /**
     * <code>optional .io.lightcone.data.types.Amount amount_f = 7;</code>
     */
    public boolean hasAmountF() {
      return amountFBuilder_ != null || amountF_ != null;
    }
    /**
     * <code>optional .io.lightcone.data.types.Amount amount_f = 7;</code>
     */
    public io.lightcone.data.types.Amount getAmountF() {
      if (amountFBuilder_ == null) {
        return amountF_ == null ? io.lightcone.data.types.Amount.getDefaultInstance() : amountF_;
      } else {
        return amountFBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.Amount amount_f = 7;</code>
     */
    public Builder setAmountF(io.lightcone.data.types.Amount value) {
      if (amountFBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        amountF_ = value;
        onChanged();
      } else {
        amountFBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Amount amount_f = 7;</code>
     */
    public Builder setAmountF(
        io.lightcone.data.types.Amount.Builder builderForValue) {
      if (amountFBuilder_ == null) {
        amountF_ = builderForValue.build();
        onChanged();
      } else {
        amountFBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Amount amount_f = 7;</code>
     */
    public Builder mergeAmountF(io.lightcone.data.types.Amount value) {
      if (amountFBuilder_ == null) {
        if (amountF_ != null) {
          amountF_ =
            io.lightcone.data.types.Amount.newBuilder(amountF_).mergeFrom(value).buildPartial();
        } else {
          amountF_ = value;
        }
        onChanged();
      } else {
        amountFBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Amount amount_f = 7;</code>
     */
    public Builder clearAmountF() {
      if (amountFBuilder_ == null) {
        amountF_ = null;
        onChanged();
      } else {
        amountF_ = null;
        amountFBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Amount amount_f = 7;</code>
     */
    public io.lightcone.data.types.Amount.Builder getAmountFBuilder() {
      
      onChanged();
      return getAmountFFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .io.lightcone.data.types.Amount amount_f = 7;</code>
     */
    public io.lightcone.data.types.AmountOrBuilder getAmountFOrBuilder() {
      if (amountFBuilder_ != null) {
        return amountFBuilder_.getMessageOrBuilder();
      } else {
        return amountF_ == null ?
            io.lightcone.data.types.Amount.getDefaultInstance() : amountF_;
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.Amount amount_f = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.Amount, io.lightcone.data.types.Amount.Builder, io.lightcone.data.types.AmountOrBuilder> 
        getAmountFFieldBuilder() {
      if (amountFBuilder_ == null) {
        amountFBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.lightcone.data.types.Amount, io.lightcone.data.types.Amount.Builder, io.lightcone.data.types.AmountOrBuilder>(
                getAmountF(),
                getParentForChildren(),
                isClean());
        amountF_ = null;
      }
      return amountFBuilder_;
    }

    private io.lightcone.data.types.Percentage walletSplit_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.Percentage, io.lightcone.data.types.Percentage.Builder, io.lightcone.data.types.PercentageOrBuilder> walletSplitBuilder_;
    /**
     * <code>optional .io.lightcone.data.types.Percentage wallet_split = 8;</code>
     */
    public boolean hasWalletSplit() {
      return walletSplitBuilder_ != null || walletSplit_ != null;
    }
    /**
     * <code>optional .io.lightcone.data.types.Percentage wallet_split = 8;</code>
     */
    public io.lightcone.data.types.Percentage getWalletSplit() {
      if (walletSplitBuilder_ == null) {
        return walletSplit_ == null ? io.lightcone.data.types.Percentage.getDefaultInstance() : walletSplit_;
      } else {
        return walletSplitBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.Percentage wallet_split = 8;</code>
     */
    public Builder setWalletSplit(io.lightcone.data.types.Percentage value) {
      if (walletSplitBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        walletSplit_ = value;
        onChanged();
      } else {
        walletSplitBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Percentage wallet_split = 8;</code>
     */
    public Builder setWalletSplit(
        io.lightcone.data.types.Percentage.Builder builderForValue) {
      if (walletSplitBuilder_ == null) {
        walletSplit_ = builderForValue.build();
        onChanged();
      } else {
        walletSplitBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Percentage wallet_split = 8;</code>
     */
    public Builder mergeWalletSplit(io.lightcone.data.types.Percentage value) {
      if (walletSplitBuilder_ == null) {
        if (walletSplit_ != null) {
          walletSplit_ =
            io.lightcone.data.types.Percentage.newBuilder(walletSplit_).mergeFrom(value).buildPartial();
        } else {
          walletSplit_ = value;
        }
        onChanged();
      } else {
        walletSplitBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Percentage wallet_split = 8;</code>
     */
    public Builder clearWalletSplit() {
      if (walletSplitBuilder_ == null) {
        walletSplit_ = null;
        onChanged();
      } else {
        walletSplit_ = null;
        walletSplitBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Percentage wallet_split = 8;</code>
     */
    public io.lightcone.data.types.Percentage.Builder getWalletSplitBuilder() {
      
      onChanged();
      return getWalletSplitFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .io.lightcone.data.types.Percentage wallet_split = 8;</code>
     */
    public io.lightcone.data.types.PercentageOrBuilder getWalletSplitOrBuilder() {
      if (walletSplitBuilder_ != null) {
        return walletSplitBuilder_.getMessageOrBuilder();
      } else {
        return walletSplit_ == null ?
            io.lightcone.data.types.Percentage.getDefaultInstance() : walletSplit_;
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.Percentage wallet_split = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.Percentage, io.lightcone.data.types.Percentage.Builder, io.lightcone.data.types.PercentageOrBuilder> 
        getWalletSplitFieldBuilder() {
      if (walletSplitBuilder_ == null) {
        walletSplitBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.lightcone.data.types.Percentage, io.lightcone.data.types.Percentage.Builder, io.lightcone.data.types.PercentageOrBuilder>(
                getWalletSplit(),
                getParentForChildren(),
                isClean());
        walletSplit_ = null;
      }
      return walletSplitBuilder_;
    }

    private io.lightcone.data.types.Nonce nonce_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.Nonce, io.lightcone.data.types.Nonce.Builder, io.lightcone.data.types.NonceOrBuilder> nonceBuilder_;
    /**
     * <code>optional .io.lightcone.data.types.Nonce nonce = 9;</code>
     */
    public boolean hasNonce() {
      return nonceBuilder_ != null || nonce_ != null;
    }
    /**
     * <code>optional .io.lightcone.data.types.Nonce nonce = 9;</code>
     */
    public io.lightcone.data.types.Nonce getNonce() {
      if (nonceBuilder_ == null) {
        return nonce_ == null ? io.lightcone.data.types.Nonce.getDefaultInstance() : nonce_;
      } else {
        return nonceBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.Nonce nonce = 9;</code>
     */
    public Builder setNonce(io.lightcone.data.types.Nonce value) {
      if (nonceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        nonce_ = value;
        onChanged();
      } else {
        nonceBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Nonce nonce = 9;</code>
     */
    public Builder setNonce(
        io.lightcone.data.types.Nonce.Builder builderForValue) {
      if (nonceBuilder_ == null) {
        nonce_ = builderForValue.build();
        onChanged();
      } else {
        nonceBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Nonce nonce = 9;</code>
     */
    public Builder mergeNonce(io.lightcone.data.types.Nonce value) {
      if (nonceBuilder_ == null) {
        if (nonce_ != null) {
          nonce_ =
            io.lightcone.data.types.Nonce.newBuilder(nonce_).mergeFrom(value).buildPartial();
        } else {
          nonce_ = value;
        }
        onChanged();
      } else {
        nonceBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Nonce nonce = 9;</code>
     */
    public Builder clearNonce() {
      if (nonceBuilder_ == null) {
        nonce_ = null;
        onChanged();
      } else {
        nonce_ = null;
        nonceBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Nonce nonce = 9;</code>
     */
    public io.lightcone.data.types.Nonce.Builder getNonceBuilder() {
      
      onChanged();
      return getNonceFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .io.lightcone.data.types.Nonce nonce = 9;</code>
     */
    public io.lightcone.data.types.NonceOrBuilder getNonceOrBuilder() {
      if (nonceBuilder_ != null) {
        return nonceBuilder_.getMessageOrBuilder();
      } else {
        return nonce_ == null ?
            io.lightcone.data.types.Nonce.getDefaultInstance() : nonce_;
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.Nonce nonce = 9;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.Nonce, io.lightcone.data.types.Nonce.Builder, io.lightcone.data.types.NonceOrBuilder> 
        getNonceFieldBuilder() {
      if (nonceBuilder_ == null) {
        nonceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.lightcone.data.types.Nonce, io.lightcone.data.types.Nonce.Builder, io.lightcone.data.types.NonceOrBuilder>(
                getNonce(),
                getParentForChildren(),
                isClean());
        nonce_ = null;
      }
      return nonceBuilder_;
    }

    private io.lightcone.data.types.EdDSASignature sig_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.EdDSASignature, io.lightcone.data.types.EdDSASignature.Builder, io.lightcone.data.types.EdDSASignatureOrBuilder> sigBuilder_;
    /**
     * <code>optional .io.lightcone.data.types.EdDSASignature sig = 10;</code>
     */
    public boolean hasSig() {
      return sigBuilder_ != null || sig_ != null;
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSASignature sig = 10;</code>
     */
    public io.lightcone.data.types.EdDSASignature getSig() {
      if (sigBuilder_ == null) {
        return sig_ == null ? io.lightcone.data.types.EdDSASignature.getDefaultInstance() : sig_;
      } else {
        return sigBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSASignature sig = 10;</code>
     */
    public Builder setSig(io.lightcone.data.types.EdDSASignature value) {
      if (sigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        sig_ = value;
        onChanged();
      } else {
        sigBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSASignature sig = 10;</code>
     */
    public Builder setSig(
        io.lightcone.data.types.EdDSASignature.Builder builderForValue) {
      if (sigBuilder_ == null) {
        sig_ = builderForValue.build();
        onChanged();
      } else {
        sigBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSASignature sig = 10;</code>
     */
    public Builder mergeSig(io.lightcone.data.types.EdDSASignature value) {
      if (sigBuilder_ == null) {
        if (sig_ != null) {
          sig_ =
            io.lightcone.data.types.EdDSASignature.newBuilder(sig_).mergeFrom(value).buildPartial();
        } else {
          sig_ = value;
        }
        onChanged();
      } else {
        sigBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSASignature sig = 10;</code>
     */
    public Builder clearSig() {
      if (sigBuilder_ == null) {
        sig_ = null;
        onChanged();
      } else {
        sig_ = null;
        sigBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSASignature sig = 10;</code>
     */
    public io.lightcone.data.types.EdDSASignature.Builder getSigBuilder() {
      
      onChanged();
      return getSigFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSASignature sig = 10;</code>
     */
    public io.lightcone.data.types.EdDSASignatureOrBuilder getSigOrBuilder() {
      if (sigBuilder_ != null) {
        return sigBuilder_.getMessageOrBuilder();
      } else {
        return sig_ == null ?
            io.lightcone.data.types.EdDSASignature.getDefaultInstance() : sig_;
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSASignature sig = 10;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.EdDSASignature, io.lightcone.data.types.EdDSASignature.Builder, io.lightcone.data.types.EdDSASignatureOrBuilder> 
        getSigFieldBuilder() {
      if (sigBuilder_ == null) {
        sigBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.lightcone.data.types.EdDSASignature, io.lightcone.data.types.EdDSASignature.Builder, io.lightcone.data.types.EdDSASignatureOrBuilder>(
                getSig(),
                getParentForChildren(),
                isClean());
        sig_ = null;
      }
      return sigBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:io.lightcone.data.requests.OffchainWithdrawalRequest)
  }

  // @@protoc_insertion_point(class_scope:io.lightcone.data.requests.OffchainWithdrawalRequest)
  private static final io.lightcone.data.requests.OffchainWithdrawalRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.lightcone.data.requests.OffchainWithdrawalRequest();
  }

  public static io.lightcone.data.requests.OffchainWithdrawalRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<OffchainWithdrawalRequest>
      PARSER = new com.google.protobuf.AbstractParser<OffchainWithdrawalRequest>() {
    public OffchainWithdrawalRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      try {
        return new OffchainWithdrawalRequest(input, extensionRegistry);
      } catch (RuntimeException e) {
        if (e.getCause() instanceof
            com.google.protobuf.InvalidProtocolBufferException) {
          throw (com.google.protobuf.InvalidProtocolBufferException)
              e.getCause();
        }
        throw e;
      }
    }
  };

  public static com.google.protobuf.Parser<OffchainWithdrawalRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<OffchainWithdrawalRequest> getParserForType() {
    return PARSER;
  }

  public io.lightcone.data.requests.OffchainWithdrawalRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

