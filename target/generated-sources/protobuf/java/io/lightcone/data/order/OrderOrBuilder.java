// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data_order.proto

package io.lightcone.data.order;

public interface OrderOrBuilder extends
    // @@protoc_insertion_point(interface_extends:io.lightcone.data.order.Order)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>optional uint32 exchange_id = 1;</code>
   */
  int getExchangeId();

  /**
   * <code>optional .io.lightcone.data.types.OrderID order_id = 2;</code>
   */
  boolean hasOrderId();
  /**
   * <code>optional .io.lightcone.data.types.OrderID order_id = 2;</code>
   */
  io.lightcone.data.types.OrderID getOrderId();
  /**
   * <code>optional .io.lightcone.data.types.OrderID order_id = 2;</code>
   */
  io.lightcone.data.types.OrderIDOrBuilder getOrderIdOrBuilder();

  /**
   * <code>optional .io.lightcone.data.types.AccountID account_id = 3;</code>
   */
  boolean hasAccountId();
  /**
   * <code>optional .io.lightcone.data.types.AccountID account_id = 3;</code>
   */
  io.lightcone.data.types.AccountID getAccountId();
  /**
   * <code>optional .io.lightcone.data.types.AccountID account_id = 3;</code>
   */
  io.lightcone.data.types.AccountIDOrBuilder getAccountIdOrBuilder();

  /**
   * <code>optional .io.lightcone.data.types.TokenID token_s = 5;</code>
   */
  boolean hasTokenS();
  /**
   * <code>optional .io.lightcone.data.types.TokenID token_s = 5;</code>
   */
  io.lightcone.data.types.TokenID getTokenS();
  /**
   * <code>optional .io.lightcone.data.types.TokenID token_s = 5;</code>
   */
  io.lightcone.data.types.TokenIDOrBuilder getTokenSOrBuilder();

  /**
   * <code>optional .io.lightcone.data.types.TokenID token_b = 6;</code>
   */
  boolean hasTokenB();
  /**
   * <code>optional .io.lightcone.data.types.TokenID token_b = 6;</code>
   */
  io.lightcone.data.types.TokenID getTokenB();
  /**
   * <code>optional .io.lightcone.data.types.TokenID token_b = 6;</code>
   */
  io.lightcone.data.types.TokenIDOrBuilder getTokenBOrBuilder();

  /**
   * <code>optional .io.lightcone.data.order.TokenAmounts amounts = 8;</code>
   */
  boolean hasAmounts();
  /**
   * <code>optional .io.lightcone.data.order.TokenAmounts amounts = 8;</code>
   */
  io.lightcone.data.order.TokenAmounts getAmounts();
  /**
   * <code>optional .io.lightcone.data.order.TokenAmounts amounts = 8;</code>
   */
  io.lightcone.data.order.TokenAmountsOrBuilder getAmountsOrBuilder();

  /**
   * <code>optional .io.lightcone.data.types.Bips max_fee = 9;</code>
   */
  boolean hasMaxFee();
  /**
   * <code>optional .io.lightcone.data.types.Bips max_fee = 9;</code>
   */
  io.lightcone.data.types.Bips getMaxFee();
  /**
   * <code>optional .io.lightcone.data.types.Bips max_fee = 9;</code>
   */
  io.lightcone.data.types.BipsOrBuilder getMaxFeeOrBuilder();

  /**
   * <code>optional .io.lightcone.data.types.Bips fee = 10;</code>
   */
  boolean hasFee();
  /**
   * <code>optional .io.lightcone.data.types.Bips fee = 10;</code>
   */
  io.lightcone.data.types.Bips getFee();
  /**
   * <code>optional .io.lightcone.data.types.Bips fee = 10;</code>
   */
  io.lightcone.data.types.BipsOrBuilder getFeeOrBuilder();

  /**
   * <code>optional .io.lightcone.data.types.Bips rebate = 11;</code>
   */
  boolean hasRebate();
  /**
   * <code>optional .io.lightcone.data.types.Bips rebate = 11;</code>
   */
  io.lightcone.data.types.Bips getRebate();
  /**
   * <code>optional .io.lightcone.data.types.Bips rebate = 11;</code>
   */
  io.lightcone.data.types.BipsOrBuilder getRebateOrBuilder();

  /**
   * <code>optional bool all_or_none = 12;</code>
   */
  boolean getAllOrNone();

  /**
   * <code>optional uint64 valid_since = 13;</code>
   */
  long getValidSince();

  /**
   * <code>optional uint64 valid_until = 14;</code>
   */
  long getValidUntil();

  /**
   * <code>optional bool buy = 15;</code>
   */
  boolean getBuy();

  /**
   * <code>optional .io.lightcone.data.types.EdDSAPubKey trading_pub_key = 16;</code>
   */
  boolean hasTradingPubKey();
  /**
   * <code>optional .io.lightcone.data.types.EdDSAPubKey trading_pub_key = 16;</code>
   */
  io.lightcone.data.types.EdDSAPubKey getTradingPubKey();
  /**
   * <code>optional .io.lightcone.data.types.EdDSAPubKey trading_pub_key = 16;</code>
   */
  io.lightcone.data.types.EdDSAPubKeyOrBuilder getTradingPubKeyOrBuilder();

  /**
   * <code>optional .io.lightcone.data.types.EdDSAPubKey dual_auth_pub_key = 17;</code>
   */
  boolean hasDualAuthPubKey();
  /**
   * <code>optional .io.lightcone.data.types.EdDSAPubKey dual_auth_pub_key = 17;</code>
   */
  io.lightcone.data.types.EdDSAPubKey getDualAuthPubKey();
  /**
   * <code>optional .io.lightcone.data.types.EdDSAPubKey dual_auth_pub_key = 17;</code>
   */
  io.lightcone.data.types.EdDSAPubKeyOrBuilder getDualAuthPubKeyOrBuilder();

  /**
   * <code>optional .io.lightcone.data.types.EdDSAPrivKey dual_auth_priv_key = 18;</code>
   */
  boolean hasDualAuthPrivKey();
  /**
   * <code>optional .io.lightcone.data.types.EdDSAPrivKey dual_auth_priv_key = 18;</code>
   */
  io.lightcone.data.types.EdDSAPrivKey getDualAuthPrivKey();
  /**
   * <code>optional .io.lightcone.data.types.EdDSAPrivKey dual_auth_priv_key = 18;</code>
   */
  io.lightcone.data.types.EdDSAPrivKeyOrBuilder getDualAuthPrivKeyOrBuilder();

  /**
   * <code>optional .io.lightcone.data.types.EdDSASignature trading_sig = 19;</code>
   */
  boolean hasTradingSig();
  /**
   * <code>optional .io.lightcone.data.types.EdDSASignature trading_sig = 19;</code>
   */
  io.lightcone.data.types.EdDSASignature getTradingSig();
  /**
   * <code>optional .io.lightcone.data.types.EdDSASignature trading_sig = 19;</code>
   */
  io.lightcone.data.types.EdDSASignatureOrBuilder getTradingSigOrBuilder();
}
