// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data_order.proto

package io.lightcone.data.order;

/**
 * Protobuf type {@code io.lightcone.data.order.Order}
 *
 * <pre>
 * new fee model
 * </pre>
 */
public  final class Order extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:io.lightcone.data.order.Order)
    OrderOrBuilder {
  // Use Order.newBuilder() to construct.
  private Order(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private Order() {
    exchangeId_ = 0;
    allOrNone_ = false;
    validSince_ = 0L;
    validUntil_ = 0L;
    buy_ = false;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private Order(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            exchangeId_ = input.readUInt32();
            break;
          }
          case 18: {
            io.lightcone.data.types.OrderID.Builder subBuilder = null;
            if (orderId_ != null) {
              subBuilder = orderId_.toBuilder();
            }
            orderId_ = input.readMessage(io.lightcone.data.types.OrderID.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(orderId_);
              orderId_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            io.lightcone.data.types.AccountID.Builder subBuilder = null;
            if (accountId_ != null) {
              subBuilder = accountId_.toBuilder();
            }
            accountId_ = input.readMessage(io.lightcone.data.types.AccountID.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(accountId_);
              accountId_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            io.lightcone.data.types.TokenID.Builder subBuilder = null;
            if (tokenS_ != null) {
              subBuilder = tokenS_.toBuilder();
            }
            tokenS_ = input.readMessage(io.lightcone.data.types.TokenID.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(tokenS_);
              tokenS_ = subBuilder.buildPartial();
            }

            break;
          }
          case 50: {
            io.lightcone.data.types.TokenID.Builder subBuilder = null;
            if (tokenB_ != null) {
              subBuilder = tokenB_.toBuilder();
            }
            tokenB_ = input.readMessage(io.lightcone.data.types.TokenID.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(tokenB_);
              tokenB_ = subBuilder.buildPartial();
            }

            break;
          }
          case 66: {
            io.lightcone.data.order.TokenAmounts.Builder subBuilder = null;
            if (amounts_ != null) {
              subBuilder = amounts_.toBuilder();
            }
            amounts_ = input.readMessage(io.lightcone.data.order.TokenAmounts.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(amounts_);
              amounts_ = subBuilder.buildPartial();
            }

            break;
          }
          case 74: {
            io.lightcone.data.types.Bips.Builder subBuilder = null;
            if (maxFee_ != null) {
              subBuilder = maxFee_.toBuilder();
            }
            maxFee_ = input.readMessage(io.lightcone.data.types.Bips.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(maxFee_);
              maxFee_ = subBuilder.buildPartial();
            }

            break;
          }
          case 82: {
            io.lightcone.data.types.Bips.Builder subBuilder = null;
            if (fee_ != null) {
              subBuilder = fee_.toBuilder();
            }
            fee_ = input.readMessage(io.lightcone.data.types.Bips.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(fee_);
              fee_ = subBuilder.buildPartial();
            }

            break;
          }
          case 90: {
            io.lightcone.data.types.Bips.Builder subBuilder = null;
            if (rebate_ != null) {
              subBuilder = rebate_.toBuilder();
            }
            rebate_ = input.readMessage(io.lightcone.data.types.Bips.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(rebate_);
              rebate_ = subBuilder.buildPartial();
            }

            break;
          }
          case 96: {

            allOrNone_ = input.readBool();
            break;
          }
          case 104: {

            validSince_ = input.readUInt64();
            break;
          }
          case 112: {

            validUntil_ = input.readUInt64();
            break;
          }
          case 120: {

            buy_ = input.readBool();
            break;
          }
          case 130: {
            io.lightcone.data.types.EdDSAPubKey.Builder subBuilder = null;
            if (tradingPubKey_ != null) {
              subBuilder = tradingPubKey_.toBuilder();
            }
            tradingPubKey_ = input.readMessage(io.lightcone.data.types.EdDSAPubKey.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(tradingPubKey_);
              tradingPubKey_ = subBuilder.buildPartial();
            }

            break;
          }
          case 138: {
            io.lightcone.data.types.EdDSAPubKey.Builder subBuilder = null;
            if (dualAuthPubKey_ != null) {
              subBuilder = dualAuthPubKey_.toBuilder();
            }
            dualAuthPubKey_ = input.readMessage(io.lightcone.data.types.EdDSAPubKey.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(dualAuthPubKey_);
              dualAuthPubKey_ = subBuilder.buildPartial();
            }

            break;
          }
          case 146: {
            io.lightcone.data.types.EdDSAPrivKey.Builder subBuilder = null;
            if (dualAuthPrivKey_ != null) {
              subBuilder = dualAuthPrivKey_.toBuilder();
            }
            dualAuthPrivKey_ = input.readMessage(io.lightcone.data.types.EdDSAPrivKey.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(dualAuthPrivKey_);
              dualAuthPrivKey_ = subBuilder.buildPartial();
            }

            break;
          }
          case 154: {
            io.lightcone.data.types.EdDSASignature.Builder subBuilder = null;
            if (tradingSig_ != null) {
              subBuilder = tradingSig_.toBuilder();
            }
            tradingSig_ = input.readMessage(io.lightcone.data.types.EdDSASignature.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(tradingSig_);
              tradingSig_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw new RuntimeException(e.setUnfinishedMessage(this));
    } catch (java.io.IOException e) {
      throw new RuntimeException(
          new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this));
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.lightcone.data.order.DataOrder.internal_static_io_lightcone_data_order_Order_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.lightcone.data.order.DataOrder.internal_static_io_lightcone_data_order_Order_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.lightcone.data.order.Order.class, io.lightcone.data.order.Order.Builder.class);
  }

  public static final int EXCHANGE_ID_FIELD_NUMBER = 1;
  private int exchangeId_;
  /**
   * <code>optional uint32 exchange_id = 1;</code>
   */
  public int getExchangeId() {
    return exchangeId_;
  }

  public static final int ORDER_ID_FIELD_NUMBER = 2;
  private io.lightcone.data.types.OrderID orderId_;
  /**
   * <code>optional .io.lightcone.data.types.OrderID order_id = 2;</code>
   */
  public boolean hasOrderId() {
    return orderId_ != null;
  }
  /**
   * <code>optional .io.lightcone.data.types.OrderID order_id = 2;</code>
   */
  public io.lightcone.data.types.OrderID getOrderId() {
    return orderId_ == null ? io.lightcone.data.types.OrderID.getDefaultInstance() : orderId_;
  }
  /**
   * <code>optional .io.lightcone.data.types.OrderID order_id = 2;</code>
   */
  public io.lightcone.data.types.OrderIDOrBuilder getOrderIdOrBuilder() {
    return getOrderId();
  }

  public static final int ACCOUNT_ID_FIELD_NUMBER = 3;
  private io.lightcone.data.types.AccountID accountId_;
  /**
   * <code>optional .io.lightcone.data.types.AccountID account_id = 3;</code>
   */
  public boolean hasAccountId() {
    return accountId_ != null;
  }
  /**
   * <code>optional .io.lightcone.data.types.AccountID account_id = 3;</code>
   */
  public io.lightcone.data.types.AccountID getAccountId() {
    return accountId_ == null ? io.lightcone.data.types.AccountID.getDefaultInstance() : accountId_;
  }
  /**
   * <code>optional .io.lightcone.data.types.AccountID account_id = 3;</code>
   */
  public io.lightcone.data.types.AccountIDOrBuilder getAccountIdOrBuilder() {
    return getAccountId();
  }

  public static final int TOKEN_S_FIELD_NUMBER = 5;
  private io.lightcone.data.types.TokenID tokenS_;
  /**
   * <code>optional .io.lightcone.data.types.TokenID token_s = 5;</code>
   */
  public boolean hasTokenS() {
    return tokenS_ != null;
  }
  /**
   * <code>optional .io.lightcone.data.types.TokenID token_s = 5;</code>
   */
  public io.lightcone.data.types.TokenID getTokenS() {
    return tokenS_ == null ? io.lightcone.data.types.TokenID.getDefaultInstance() : tokenS_;
  }
  /**
   * <code>optional .io.lightcone.data.types.TokenID token_s = 5;</code>
   */
  public io.lightcone.data.types.TokenIDOrBuilder getTokenSOrBuilder() {
    return getTokenS();
  }

  public static final int TOKEN_B_FIELD_NUMBER = 6;
  private io.lightcone.data.types.TokenID tokenB_;
  /**
   * <code>optional .io.lightcone.data.types.TokenID token_b = 6;</code>
   */
  public boolean hasTokenB() {
    return tokenB_ != null;
  }
  /**
   * <code>optional .io.lightcone.data.types.TokenID token_b = 6;</code>
   */
  public io.lightcone.data.types.TokenID getTokenB() {
    return tokenB_ == null ? io.lightcone.data.types.TokenID.getDefaultInstance() : tokenB_;
  }
  /**
   * <code>optional .io.lightcone.data.types.TokenID token_b = 6;</code>
   */
  public io.lightcone.data.types.TokenIDOrBuilder getTokenBOrBuilder() {
    return getTokenB();
  }

  public static final int AMOUNTS_FIELD_NUMBER = 8;
  private io.lightcone.data.order.TokenAmounts amounts_;
  /**
   * <code>optional .io.lightcone.data.order.TokenAmounts amounts = 8;</code>
   */
  public boolean hasAmounts() {
    return amounts_ != null;
  }
  /**
   * <code>optional .io.lightcone.data.order.TokenAmounts amounts = 8;</code>
   */
  public io.lightcone.data.order.TokenAmounts getAmounts() {
    return amounts_ == null ? io.lightcone.data.order.TokenAmounts.getDefaultInstance() : amounts_;
  }
  /**
   * <code>optional .io.lightcone.data.order.TokenAmounts amounts = 8;</code>
   */
  public io.lightcone.data.order.TokenAmountsOrBuilder getAmountsOrBuilder() {
    return getAmounts();
  }

  public static final int MAX_FEE_FIELD_NUMBER = 9;
  private io.lightcone.data.types.Bips maxFee_;
  /**
   * <code>optional .io.lightcone.data.types.Bips max_fee = 9;</code>
   */
  public boolean hasMaxFee() {
    return maxFee_ != null;
  }
  /**
   * <code>optional .io.lightcone.data.types.Bips max_fee = 9;</code>
   */
  public io.lightcone.data.types.Bips getMaxFee() {
    return maxFee_ == null ? io.lightcone.data.types.Bips.getDefaultInstance() : maxFee_;
  }
  /**
   * <code>optional .io.lightcone.data.types.Bips max_fee = 9;</code>
   */
  public io.lightcone.data.types.BipsOrBuilder getMaxFeeOrBuilder() {
    return getMaxFee();
  }

  public static final int FEE_FIELD_NUMBER = 10;
  private io.lightcone.data.types.Bips fee_;
  /**
   * <code>optional .io.lightcone.data.types.Bips fee = 10;</code>
   */
  public boolean hasFee() {
    return fee_ != null;
  }
  /**
   * <code>optional .io.lightcone.data.types.Bips fee = 10;</code>
   */
  public io.lightcone.data.types.Bips getFee() {
    return fee_ == null ? io.lightcone.data.types.Bips.getDefaultInstance() : fee_;
  }
  /**
   * <code>optional .io.lightcone.data.types.Bips fee = 10;</code>
   */
  public io.lightcone.data.types.BipsOrBuilder getFeeOrBuilder() {
    return getFee();
  }

  public static final int REBATE_FIELD_NUMBER = 11;
  private io.lightcone.data.types.Bips rebate_;
  /**
   * <code>optional .io.lightcone.data.types.Bips rebate = 11;</code>
   */
  public boolean hasRebate() {
    return rebate_ != null;
  }
  /**
   * <code>optional .io.lightcone.data.types.Bips rebate = 11;</code>
   */
  public io.lightcone.data.types.Bips getRebate() {
    return rebate_ == null ? io.lightcone.data.types.Bips.getDefaultInstance() : rebate_;
  }
  /**
   * <code>optional .io.lightcone.data.types.Bips rebate = 11;</code>
   */
  public io.lightcone.data.types.BipsOrBuilder getRebateOrBuilder() {
    return getRebate();
  }

  public static final int ALL_OR_NONE_FIELD_NUMBER = 12;
  private boolean allOrNone_;
  /**
   * <code>optional bool all_or_none = 12;</code>
   */
  public boolean getAllOrNone() {
    return allOrNone_;
  }

  public static final int VALID_SINCE_FIELD_NUMBER = 13;
  private long validSince_;
  /**
   * <code>optional uint64 valid_since = 13;</code>
   */
  public long getValidSince() {
    return validSince_;
  }

  public static final int VALID_UNTIL_FIELD_NUMBER = 14;
  private long validUntil_;
  /**
   * <code>optional uint64 valid_until = 14;</code>
   */
  public long getValidUntil() {
    return validUntil_;
  }

  public static final int BUY_FIELD_NUMBER = 15;
  private boolean buy_;
  /**
   * <code>optional bool buy = 15;</code>
   */
  public boolean getBuy() {
    return buy_;
  }

  public static final int TRADING_PUB_KEY_FIELD_NUMBER = 16;
  private io.lightcone.data.types.EdDSAPubKey tradingPubKey_;
  /**
   * <code>optional .io.lightcone.data.types.EdDSAPubKey trading_pub_key = 16;</code>
   */
  public boolean hasTradingPubKey() {
    return tradingPubKey_ != null;
  }
  /**
   * <code>optional .io.lightcone.data.types.EdDSAPubKey trading_pub_key = 16;</code>
   */
  public io.lightcone.data.types.EdDSAPubKey getTradingPubKey() {
    return tradingPubKey_ == null ? io.lightcone.data.types.EdDSAPubKey.getDefaultInstance() : tradingPubKey_;
  }
  /**
   * <code>optional .io.lightcone.data.types.EdDSAPubKey trading_pub_key = 16;</code>
   */
  public io.lightcone.data.types.EdDSAPubKeyOrBuilder getTradingPubKeyOrBuilder() {
    return getTradingPubKey();
  }

  public static final int DUAL_AUTH_PUB_KEY_FIELD_NUMBER = 17;
  private io.lightcone.data.types.EdDSAPubKey dualAuthPubKey_;
  /**
   * <code>optional .io.lightcone.data.types.EdDSAPubKey dual_auth_pub_key = 17;</code>
   */
  public boolean hasDualAuthPubKey() {
    return dualAuthPubKey_ != null;
  }
  /**
   * <code>optional .io.lightcone.data.types.EdDSAPubKey dual_auth_pub_key = 17;</code>
   */
  public io.lightcone.data.types.EdDSAPubKey getDualAuthPubKey() {
    return dualAuthPubKey_ == null ? io.lightcone.data.types.EdDSAPubKey.getDefaultInstance() : dualAuthPubKey_;
  }
  /**
   * <code>optional .io.lightcone.data.types.EdDSAPubKey dual_auth_pub_key = 17;</code>
   */
  public io.lightcone.data.types.EdDSAPubKeyOrBuilder getDualAuthPubKeyOrBuilder() {
    return getDualAuthPubKey();
  }

  public static final int DUAL_AUTH_PRIV_KEY_FIELD_NUMBER = 18;
  private io.lightcone.data.types.EdDSAPrivKey dualAuthPrivKey_;
  /**
   * <code>optional .io.lightcone.data.types.EdDSAPrivKey dual_auth_priv_key = 18;</code>
   */
  public boolean hasDualAuthPrivKey() {
    return dualAuthPrivKey_ != null;
  }
  /**
   * <code>optional .io.lightcone.data.types.EdDSAPrivKey dual_auth_priv_key = 18;</code>
   */
  public io.lightcone.data.types.EdDSAPrivKey getDualAuthPrivKey() {
    return dualAuthPrivKey_ == null ? io.lightcone.data.types.EdDSAPrivKey.getDefaultInstance() : dualAuthPrivKey_;
  }
  /**
   * <code>optional .io.lightcone.data.types.EdDSAPrivKey dual_auth_priv_key = 18;</code>
   */
  public io.lightcone.data.types.EdDSAPrivKeyOrBuilder getDualAuthPrivKeyOrBuilder() {
    return getDualAuthPrivKey();
  }

  public static final int TRADING_SIG_FIELD_NUMBER = 19;
  private io.lightcone.data.types.EdDSASignature tradingSig_;
  /**
   * <code>optional .io.lightcone.data.types.EdDSASignature trading_sig = 19;</code>
   */
  public boolean hasTradingSig() {
    return tradingSig_ != null;
  }
  /**
   * <code>optional .io.lightcone.data.types.EdDSASignature trading_sig = 19;</code>
   */
  public io.lightcone.data.types.EdDSASignature getTradingSig() {
    return tradingSig_ == null ? io.lightcone.data.types.EdDSASignature.getDefaultInstance() : tradingSig_;
  }
  /**
   * <code>optional .io.lightcone.data.types.EdDSASignature trading_sig = 19;</code>
   */
  public io.lightcone.data.types.EdDSASignatureOrBuilder getTradingSigOrBuilder() {
    return getTradingSig();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (exchangeId_ != 0) {
      output.writeUInt32(1, exchangeId_);
    }
    if (orderId_ != null) {
      output.writeMessage(2, getOrderId());
    }
    if (accountId_ != null) {
      output.writeMessage(3, getAccountId());
    }
    if (tokenS_ != null) {
      output.writeMessage(5, getTokenS());
    }
    if (tokenB_ != null) {
      output.writeMessage(6, getTokenB());
    }
    if (amounts_ != null) {
      output.writeMessage(8, getAmounts());
    }
    if (maxFee_ != null) {
      output.writeMessage(9, getMaxFee());
    }
    if (fee_ != null) {
      output.writeMessage(10, getFee());
    }
    if (rebate_ != null) {
      output.writeMessage(11, getRebate());
    }
    if (allOrNone_ != false) {
      output.writeBool(12, allOrNone_);
    }
    if (validSince_ != 0L) {
      output.writeUInt64(13, validSince_);
    }
    if (validUntil_ != 0L) {
      output.writeUInt64(14, validUntil_);
    }
    if (buy_ != false) {
      output.writeBool(15, buy_);
    }
    if (tradingPubKey_ != null) {
      output.writeMessage(16, getTradingPubKey());
    }
    if (dualAuthPubKey_ != null) {
      output.writeMessage(17, getDualAuthPubKey());
    }
    if (dualAuthPrivKey_ != null) {
      output.writeMessage(18, getDualAuthPrivKey());
    }
    if (tradingSig_ != null) {
      output.writeMessage(19, getTradingSig());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (exchangeId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(1, exchangeId_);
    }
    if (orderId_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getOrderId());
    }
    if (accountId_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getAccountId());
    }
    if (tokenS_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getTokenS());
    }
    if (tokenB_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getTokenB());
    }
    if (amounts_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getAmounts());
    }
    if (maxFee_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, getMaxFee());
    }
    if (fee_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, getFee());
    }
    if (rebate_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, getRebate());
    }
    if (allOrNone_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(12, allOrNone_);
    }
    if (validSince_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(13, validSince_);
    }
    if (validUntil_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(14, validUntil_);
    }
    if (buy_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(15, buy_);
    }
    if (tradingPubKey_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(16, getTradingPubKey());
    }
    if (dualAuthPubKey_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(17, getDualAuthPubKey());
    }
    if (dualAuthPrivKey_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(18, getDualAuthPrivKey());
    }
    if (tradingSig_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(19, getTradingSig());
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  public static io.lightcone.data.order.Order parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.lightcone.data.order.Order parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.lightcone.data.order.Order parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.lightcone.data.order.Order parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.lightcone.data.order.Order parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static io.lightcone.data.order.Order parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static io.lightcone.data.order.Order parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static io.lightcone.data.order.Order parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static io.lightcone.data.order.Order parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static io.lightcone.data.order.Order parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.lightcone.data.order.Order prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code io.lightcone.data.order.Order}
   *
   * <pre>
   * new fee model
   * </pre>
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:io.lightcone.data.order.Order)
      io.lightcone.data.order.OrderOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.lightcone.data.order.DataOrder.internal_static_io_lightcone_data_order_Order_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.lightcone.data.order.DataOrder.internal_static_io_lightcone_data_order_Order_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.lightcone.data.order.Order.class, io.lightcone.data.order.Order.Builder.class);
    }

    // Construct using io.lightcone.data.order.Order.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      exchangeId_ = 0;

      if (orderIdBuilder_ == null) {
        orderId_ = null;
      } else {
        orderId_ = null;
        orderIdBuilder_ = null;
      }
      if (accountIdBuilder_ == null) {
        accountId_ = null;
      } else {
        accountId_ = null;
        accountIdBuilder_ = null;
      }
      if (tokenSBuilder_ == null) {
        tokenS_ = null;
      } else {
        tokenS_ = null;
        tokenSBuilder_ = null;
      }
      if (tokenBBuilder_ == null) {
        tokenB_ = null;
      } else {
        tokenB_ = null;
        tokenBBuilder_ = null;
      }
      if (amountsBuilder_ == null) {
        amounts_ = null;
      } else {
        amounts_ = null;
        amountsBuilder_ = null;
      }
      if (maxFeeBuilder_ == null) {
        maxFee_ = null;
      } else {
        maxFee_ = null;
        maxFeeBuilder_ = null;
      }
      if (feeBuilder_ == null) {
        fee_ = null;
      } else {
        fee_ = null;
        feeBuilder_ = null;
      }
      if (rebateBuilder_ == null) {
        rebate_ = null;
      } else {
        rebate_ = null;
        rebateBuilder_ = null;
      }
      allOrNone_ = false;

      validSince_ = 0L;

      validUntil_ = 0L;

      buy_ = false;

      if (tradingPubKeyBuilder_ == null) {
        tradingPubKey_ = null;
      } else {
        tradingPubKey_ = null;
        tradingPubKeyBuilder_ = null;
      }
      if (dualAuthPubKeyBuilder_ == null) {
        dualAuthPubKey_ = null;
      } else {
        dualAuthPubKey_ = null;
        dualAuthPubKeyBuilder_ = null;
      }
      if (dualAuthPrivKeyBuilder_ == null) {
        dualAuthPrivKey_ = null;
      } else {
        dualAuthPrivKey_ = null;
        dualAuthPrivKeyBuilder_ = null;
      }
      if (tradingSigBuilder_ == null) {
        tradingSig_ = null;
      } else {
        tradingSig_ = null;
        tradingSigBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.lightcone.data.order.DataOrder.internal_static_io_lightcone_data_order_Order_descriptor;
    }

    public io.lightcone.data.order.Order getDefaultInstanceForType() {
      return io.lightcone.data.order.Order.getDefaultInstance();
    }

    public io.lightcone.data.order.Order build() {
      io.lightcone.data.order.Order result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public io.lightcone.data.order.Order buildPartial() {
      io.lightcone.data.order.Order result = new io.lightcone.data.order.Order(this);
      result.exchangeId_ = exchangeId_;
      if (orderIdBuilder_ == null) {
        result.orderId_ = orderId_;
      } else {
        result.orderId_ = orderIdBuilder_.build();
      }
      if (accountIdBuilder_ == null) {
        result.accountId_ = accountId_;
      } else {
        result.accountId_ = accountIdBuilder_.build();
      }
      if (tokenSBuilder_ == null) {
        result.tokenS_ = tokenS_;
      } else {
        result.tokenS_ = tokenSBuilder_.build();
      }
      if (tokenBBuilder_ == null) {
        result.tokenB_ = tokenB_;
      } else {
        result.tokenB_ = tokenBBuilder_.build();
      }
      if (amountsBuilder_ == null) {
        result.amounts_ = amounts_;
      } else {
        result.amounts_ = amountsBuilder_.build();
      }
      if (maxFeeBuilder_ == null) {
        result.maxFee_ = maxFee_;
      } else {
        result.maxFee_ = maxFeeBuilder_.build();
      }
      if (feeBuilder_ == null) {
        result.fee_ = fee_;
      } else {
        result.fee_ = feeBuilder_.build();
      }
      if (rebateBuilder_ == null) {
        result.rebate_ = rebate_;
      } else {
        result.rebate_ = rebateBuilder_.build();
      }
      result.allOrNone_ = allOrNone_;
      result.validSince_ = validSince_;
      result.validUntil_ = validUntil_;
      result.buy_ = buy_;
      if (tradingPubKeyBuilder_ == null) {
        result.tradingPubKey_ = tradingPubKey_;
      } else {
        result.tradingPubKey_ = tradingPubKeyBuilder_.build();
      }
      if (dualAuthPubKeyBuilder_ == null) {
        result.dualAuthPubKey_ = dualAuthPubKey_;
      } else {
        result.dualAuthPubKey_ = dualAuthPubKeyBuilder_.build();
      }
      if (dualAuthPrivKeyBuilder_ == null) {
        result.dualAuthPrivKey_ = dualAuthPrivKey_;
      } else {
        result.dualAuthPrivKey_ = dualAuthPrivKeyBuilder_.build();
      }
      if (tradingSigBuilder_ == null) {
        result.tradingSig_ = tradingSig_;
      } else {
        result.tradingSig_ = tradingSigBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.lightcone.data.order.Order) {
        return mergeFrom((io.lightcone.data.order.Order)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.lightcone.data.order.Order other) {
      if (other == io.lightcone.data.order.Order.getDefaultInstance()) return this;
      if (other.getExchangeId() != 0) {
        setExchangeId(other.getExchangeId());
      }
      if (other.hasOrderId()) {
        mergeOrderId(other.getOrderId());
      }
      if (other.hasAccountId()) {
        mergeAccountId(other.getAccountId());
      }
      if (other.hasTokenS()) {
        mergeTokenS(other.getTokenS());
      }
      if (other.hasTokenB()) {
        mergeTokenB(other.getTokenB());
      }
      if (other.hasAmounts()) {
        mergeAmounts(other.getAmounts());
      }
      if (other.hasMaxFee()) {
        mergeMaxFee(other.getMaxFee());
      }
      if (other.hasFee()) {
        mergeFee(other.getFee());
      }
      if (other.hasRebate()) {
        mergeRebate(other.getRebate());
      }
      if (other.getAllOrNone() != false) {
        setAllOrNone(other.getAllOrNone());
      }
      if (other.getValidSince() != 0L) {
        setValidSince(other.getValidSince());
      }
      if (other.getValidUntil() != 0L) {
        setValidUntil(other.getValidUntil());
      }
      if (other.getBuy() != false) {
        setBuy(other.getBuy());
      }
      if (other.hasTradingPubKey()) {
        mergeTradingPubKey(other.getTradingPubKey());
      }
      if (other.hasDualAuthPubKey()) {
        mergeDualAuthPubKey(other.getDualAuthPubKey());
      }
      if (other.hasDualAuthPrivKey()) {
        mergeDualAuthPrivKey(other.getDualAuthPrivKey());
      }
      if (other.hasTradingSig()) {
        mergeTradingSig(other.getTradingSig());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.lightcone.data.order.Order parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.lightcone.data.order.Order) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int exchangeId_ ;
    /**
     * <code>optional uint32 exchange_id = 1;</code>
     */
    public int getExchangeId() {
      return exchangeId_;
    }
    /**
     * <code>optional uint32 exchange_id = 1;</code>
     */
    public Builder setExchangeId(int value) {
      
      exchangeId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional uint32 exchange_id = 1;</code>
     */
    public Builder clearExchangeId() {
      
      exchangeId_ = 0;
      onChanged();
      return this;
    }

    private io.lightcone.data.types.OrderID orderId_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.OrderID, io.lightcone.data.types.OrderID.Builder, io.lightcone.data.types.OrderIDOrBuilder> orderIdBuilder_;
    /**
     * <code>optional .io.lightcone.data.types.OrderID order_id = 2;</code>
     */
    public boolean hasOrderId() {
      return orderIdBuilder_ != null || orderId_ != null;
    }
    /**
     * <code>optional .io.lightcone.data.types.OrderID order_id = 2;</code>
     */
    public io.lightcone.data.types.OrderID getOrderId() {
      if (orderIdBuilder_ == null) {
        return orderId_ == null ? io.lightcone.data.types.OrderID.getDefaultInstance() : orderId_;
      } else {
        return orderIdBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.OrderID order_id = 2;</code>
     */
    public Builder setOrderId(io.lightcone.data.types.OrderID value) {
      if (orderIdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        orderId_ = value;
        onChanged();
      } else {
        orderIdBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.OrderID order_id = 2;</code>
     */
    public Builder setOrderId(
        io.lightcone.data.types.OrderID.Builder builderForValue) {
      if (orderIdBuilder_ == null) {
        orderId_ = builderForValue.build();
        onChanged();
      } else {
        orderIdBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.OrderID order_id = 2;</code>
     */
    public Builder mergeOrderId(io.lightcone.data.types.OrderID value) {
      if (orderIdBuilder_ == null) {
        if (orderId_ != null) {
          orderId_ =
            io.lightcone.data.types.OrderID.newBuilder(orderId_).mergeFrom(value).buildPartial();
        } else {
          orderId_ = value;
        }
        onChanged();
      } else {
        orderIdBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.OrderID order_id = 2;</code>
     */
    public Builder clearOrderId() {
      if (orderIdBuilder_ == null) {
        orderId_ = null;
        onChanged();
      } else {
        orderId_ = null;
        orderIdBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.OrderID order_id = 2;</code>
     */
    public io.lightcone.data.types.OrderID.Builder getOrderIdBuilder() {
      
      onChanged();
      return getOrderIdFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .io.lightcone.data.types.OrderID order_id = 2;</code>
     */
    public io.lightcone.data.types.OrderIDOrBuilder getOrderIdOrBuilder() {
      if (orderIdBuilder_ != null) {
        return orderIdBuilder_.getMessageOrBuilder();
      } else {
        return orderId_ == null ?
            io.lightcone.data.types.OrderID.getDefaultInstance() : orderId_;
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.OrderID order_id = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.OrderID, io.lightcone.data.types.OrderID.Builder, io.lightcone.data.types.OrderIDOrBuilder> 
        getOrderIdFieldBuilder() {
      if (orderIdBuilder_ == null) {
        orderIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.lightcone.data.types.OrderID, io.lightcone.data.types.OrderID.Builder, io.lightcone.data.types.OrderIDOrBuilder>(
                getOrderId(),
                getParentForChildren(),
                isClean());
        orderId_ = null;
      }
      return orderIdBuilder_;
    }

    private io.lightcone.data.types.AccountID accountId_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.AccountID, io.lightcone.data.types.AccountID.Builder, io.lightcone.data.types.AccountIDOrBuilder> accountIdBuilder_;
    /**
     * <code>optional .io.lightcone.data.types.AccountID account_id = 3;</code>
     */
    public boolean hasAccountId() {
      return accountIdBuilder_ != null || accountId_ != null;
    }
    /**
     * <code>optional .io.lightcone.data.types.AccountID account_id = 3;</code>
     */
    public io.lightcone.data.types.AccountID getAccountId() {
      if (accountIdBuilder_ == null) {
        return accountId_ == null ? io.lightcone.data.types.AccountID.getDefaultInstance() : accountId_;
      } else {
        return accountIdBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.AccountID account_id = 3;</code>
     */
    public Builder setAccountId(io.lightcone.data.types.AccountID value) {
      if (accountIdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        accountId_ = value;
        onChanged();
      } else {
        accountIdBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.AccountID account_id = 3;</code>
     */
    public Builder setAccountId(
        io.lightcone.data.types.AccountID.Builder builderForValue) {
      if (accountIdBuilder_ == null) {
        accountId_ = builderForValue.build();
        onChanged();
      } else {
        accountIdBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.AccountID account_id = 3;</code>
     */
    public Builder mergeAccountId(io.lightcone.data.types.AccountID value) {
      if (accountIdBuilder_ == null) {
        if (accountId_ != null) {
          accountId_ =
            io.lightcone.data.types.AccountID.newBuilder(accountId_).mergeFrom(value).buildPartial();
        } else {
          accountId_ = value;
        }
        onChanged();
      } else {
        accountIdBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.AccountID account_id = 3;</code>
     */
    public Builder clearAccountId() {
      if (accountIdBuilder_ == null) {
        accountId_ = null;
        onChanged();
      } else {
        accountId_ = null;
        accountIdBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.AccountID account_id = 3;</code>
     */
    public io.lightcone.data.types.AccountID.Builder getAccountIdBuilder() {
      
      onChanged();
      return getAccountIdFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .io.lightcone.data.types.AccountID account_id = 3;</code>
     */
    public io.lightcone.data.types.AccountIDOrBuilder getAccountIdOrBuilder() {
      if (accountIdBuilder_ != null) {
        return accountIdBuilder_.getMessageOrBuilder();
      } else {
        return accountId_ == null ?
            io.lightcone.data.types.AccountID.getDefaultInstance() : accountId_;
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.AccountID account_id = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.AccountID, io.lightcone.data.types.AccountID.Builder, io.lightcone.data.types.AccountIDOrBuilder> 
        getAccountIdFieldBuilder() {
      if (accountIdBuilder_ == null) {
        accountIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.lightcone.data.types.AccountID, io.lightcone.data.types.AccountID.Builder, io.lightcone.data.types.AccountIDOrBuilder>(
                getAccountId(),
                getParentForChildren(),
                isClean());
        accountId_ = null;
      }
      return accountIdBuilder_;
    }

    private io.lightcone.data.types.TokenID tokenS_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.TokenID, io.lightcone.data.types.TokenID.Builder, io.lightcone.data.types.TokenIDOrBuilder> tokenSBuilder_;
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_s = 5;</code>
     */
    public boolean hasTokenS() {
      return tokenSBuilder_ != null || tokenS_ != null;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_s = 5;</code>
     */
    public io.lightcone.data.types.TokenID getTokenS() {
      if (tokenSBuilder_ == null) {
        return tokenS_ == null ? io.lightcone.data.types.TokenID.getDefaultInstance() : tokenS_;
      } else {
        return tokenSBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_s = 5;</code>
     */
    public Builder setTokenS(io.lightcone.data.types.TokenID value) {
      if (tokenSBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        tokenS_ = value;
        onChanged();
      } else {
        tokenSBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_s = 5;</code>
     */
    public Builder setTokenS(
        io.lightcone.data.types.TokenID.Builder builderForValue) {
      if (tokenSBuilder_ == null) {
        tokenS_ = builderForValue.build();
        onChanged();
      } else {
        tokenSBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_s = 5;</code>
     */
    public Builder mergeTokenS(io.lightcone.data.types.TokenID value) {
      if (tokenSBuilder_ == null) {
        if (tokenS_ != null) {
          tokenS_ =
            io.lightcone.data.types.TokenID.newBuilder(tokenS_).mergeFrom(value).buildPartial();
        } else {
          tokenS_ = value;
        }
        onChanged();
      } else {
        tokenSBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_s = 5;</code>
     */
    public Builder clearTokenS() {
      if (tokenSBuilder_ == null) {
        tokenS_ = null;
        onChanged();
      } else {
        tokenS_ = null;
        tokenSBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_s = 5;</code>
     */
    public io.lightcone.data.types.TokenID.Builder getTokenSBuilder() {
      
      onChanged();
      return getTokenSFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_s = 5;</code>
     */
    public io.lightcone.data.types.TokenIDOrBuilder getTokenSOrBuilder() {
      if (tokenSBuilder_ != null) {
        return tokenSBuilder_.getMessageOrBuilder();
      } else {
        return tokenS_ == null ?
            io.lightcone.data.types.TokenID.getDefaultInstance() : tokenS_;
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_s = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.TokenID, io.lightcone.data.types.TokenID.Builder, io.lightcone.data.types.TokenIDOrBuilder> 
        getTokenSFieldBuilder() {
      if (tokenSBuilder_ == null) {
        tokenSBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.lightcone.data.types.TokenID, io.lightcone.data.types.TokenID.Builder, io.lightcone.data.types.TokenIDOrBuilder>(
                getTokenS(),
                getParentForChildren(),
                isClean());
        tokenS_ = null;
      }
      return tokenSBuilder_;
    }

    private io.lightcone.data.types.TokenID tokenB_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.TokenID, io.lightcone.data.types.TokenID.Builder, io.lightcone.data.types.TokenIDOrBuilder> tokenBBuilder_;
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_b = 6;</code>
     */
    public boolean hasTokenB() {
      return tokenBBuilder_ != null || tokenB_ != null;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_b = 6;</code>
     */
    public io.lightcone.data.types.TokenID getTokenB() {
      if (tokenBBuilder_ == null) {
        return tokenB_ == null ? io.lightcone.data.types.TokenID.getDefaultInstance() : tokenB_;
      } else {
        return tokenBBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_b = 6;</code>
     */
    public Builder setTokenB(io.lightcone.data.types.TokenID value) {
      if (tokenBBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        tokenB_ = value;
        onChanged();
      } else {
        tokenBBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_b = 6;</code>
     */
    public Builder setTokenB(
        io.lightcone.data.types.TokenID.Builder builderForValue) {
      if (tokenBBuilder_ == null) {
        tokenB_ = builderForValue.build();
        onChanged();
      } else {
        tokenBBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_b = 6;</code>
     */
    public Builder mergeTokenB(io.lightcone.data.types.TokenID value) {
      if (tokenBBuilder_ == null) {
        if (tokenB_ != null) {
          tokenB_ =
            io.lightcone.data.types.TokenID.newBuilder(tokenB_).mergeFrom(value).buildPartial();
        } else {
          tokenB_ = value;
        }
        onChanged();
      } else {
        tokenBBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_b = 6;</code>
     */
    public Builder clearTokenB() {
      if (tokenBBuilder_ == null) {
        tokenB_ = null;
        onChanged();
      } else {
        tokenB_ = null;
        tokenBBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_b = 6;</code>
     */
    public io.lightcone.data.types.TokenID.Builder getTokenBBuilder() {
      
      onChanged();
      return getTokenBFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_b = 6;</code>
     */
    public io.lightcone.data.types.TokenIDOrBuilder getTokenBOrBuilder() {
      if (tokenBBuilder_ != null) {
        return tokenBBuilder_.getMessageOrBuilder();
      } else {
        return tokenB_ == null ?
            io.lightcone.data.types.TokenID.getDefaultInstance() : tokenB_;
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_b = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.TokenID, io.lightcone.data.types.TokenID.Builder, io.lightcone.data.types.TokenIDOrBuilder> 
        getTokenBFieldBuilder() {
      if (tokenBBuilder_ == null) {
        tokenBBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.lightcone.data.types.TokenID, io.lightcone.data.types.TokenID.Builder, io.lightcone.data.types.TokenIDOrBuilder>(
                getTokenB(),
                getParentForChildren(),
                isClean());
        tokenB_ = null;
      }
      return tokenBBuilder_;
    }

    private io.lightcone.data.order.TokenAmounts amounts_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.order.TokenAmounts, io.lightcone.data.order.TokenAmounts.Builder, io.lightcone.data.order.TokenAmountsOrBuilder> amountsBuilder_;
    /**
     * <code>optional .io.lightcone.data.order.TokenAmounts amounts = 8;</code>
     */
    public boolean hasAmounts() {
      return amountsBuilder_ != null || amounts_ != null;
    }
    /**
     * <code>optional .io.lightcone.data.order.TokenAmounts amounts = 8;</code>
     */
    public io.lightcone.data.order.TokenAmounts getAmounts() {
      if (amountsBuilder_ == null) {
        return amounts_ == null ? io.lightcone.data.order.TokenAmounts.getDefaultInstance() : amounts_;
      } else {
        return amountsBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .io.lightcone.data.order.TokenAmounts amounts = 8;</code>
     */
    public Builder setAmounts(io.lightcone.data.order.TokenAmounts value) {
      if (amountsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        amounts_ = value;
        onChanged();
      } else {
        amountsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.order.TokenAmounts amounts = 8;</code>
     */
    public Builder setAmounts(
        io.lightcone.data.order.TokenAmounts.Builder builderForValue) {
      if (amountsBuilder_ == null) {
        amounts_ = builderForValue.build();
        onChanged();
      } else {
        amountsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.order.TokenAmounts amounts = 8;</code>
     */
    public Builder mergeAmounts(io.lightcone.data.order.TokenAmounts value) {
      if (amountsBuilder_ == null) {
        if (amounts_ != null) {
          amounts_ =
            io.lightcone.data.order.TokenAmounts.newBuilder(amounts_).mergeFrom(value).buildPartial();
        } else {
          amounts_ = value;
        }
        onChanged();
      } else {
        amountsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.order.TokenAmounts amounts = 8;</code>
     */
    public Builder clearAmounts() {
      if (amountsBuilder_ == null) {
        amounts_ = null;
        onChanged();
      } else {
        amounts_ = null;
        amountsBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.order.TokenAmounts amounts = 8;</code>
     */
    public io.lightcone.data.order.TokenAmounts.Builder getAmountsBuilder() {
      
      onChanged();
      return getAmountsFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .io.lightcone.data.order.TokenAmounts amounts = 8;</code>
     */
    public io.lightcone.data.order.TokenAmountsOrBuilder getAmountsOrBuilder() {
      if (amountsBuilder_ != null) {
        return amountsBuilder_.getMessageOrBuilder();
      } else {
        return amounts_ == null ?
            io.lightcone.data.order.TokenAmounts.getDefaultInstance() : amounts_;
      }
    }
    /**
     * <code>optional .io.lightcone.data.order.TokenAmounts amounts = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.order.TokenAmounts, io.lightcone.data.order.TokenAmounts.Builder, io.lightcone.data.order.TokenAmountsOrBuilder> 
        getAmountsFieldBuilder() {
      if (amountsBuilder_ == null) {
        amountsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.lightcone.data.order.TokenAmounts, io.lightcone.data.order.TokenAmounts.Builder, io.lightcone.data.order.TokenAmountsOrBuilder>(
                getAmounts(),
                getParentForChildren(),
                isClean());
        amounts_ = null;
      }
      return amountsBuilder_;
    }

    private io.lightcone.data.types.Bips maxFee_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.Bips, io.lightcone.data.types.Bips.Builder, io.lightcone.data.types.BipsOrBuilder> maxFeeBuilder_;
    /**
     * <code>optional .io.lightcone.data.types.Bips max_fee = 9;</code>
     */
    public boolean hasMaxFee() {
      return maxFeeBuilder_ != null || maxFee_ != null;
    }
    /**
     * <code>optional .io.lightcone.data.types.Bips max_fee = 9;</code>
     */
    public io.lightcone.data.types.Bips getMaxFee() {
      if (maxFeeBuilder_ == null) {
        return maxFee_ == null ? io.lightcone.data.types.Bips.getDefaultInstance() : maxFee_;
      } else {
        return maxFeeBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.Bips max_fee = 9;</code>
     */
    public Builder setMaxFee(io.lightcone.data.types.Bips value) {
      if (maxFeeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        maxFee_ = value;
        onChanged();
      } else {
        maxFeeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Bips max_fee = 9;</code>
     */
    public Builder setMaxFee(
        io.lightcone.data.types.Bips.Builder builderForValue) {
      if (maxFeeBuilder_ == null) {
        maxFee_ = builderForValue.build();
        onChanged();
      } else {
        maxFeeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Bips max_fee = 9;</code>
     */
    public Builder mergeMaxFee(io.lightcone.data.types.Bips value) {
      if (maxFeeBuilder_ == null) {
        if (maxFee_ != null) {
          maxFee_ =
            io.lightcone.data.types.Bips.newBuilder(maxFee_).mergeFrom(value).buildPartial();
        } else {
          maxFee_ = value;
        }
        onChanged();
      } else {
        maxFeeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Bips max_fee = 9;</code>
     */
    public Builder clearMaxFee() {
      if (maxFeeBuilder_ == null) {
        maxFee_ = null;
        onChanged();
      } else {
        maxFee_ = null;
        maxFeeBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Bips max_fee = 9;</code>
     */
    public io.lightcone.data.types.Bips.Builder getMaxFeeBuilder() {
      
      onChanged();
      return getMaxFeeFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .io.lightcone.data.types.Bips max_fee = 9;</code>
     */
    public io.lightcone.data.types.BipsOrBuilder getMaxFeeOrBuilder() {
      if (maxFeeBuilder_ != null) {
        return maxFeeBuilder_.getMessageOrBuilder();
      } else {
        return maxFee_ == null ?
            io.lightcone.data.types.Bips.getDefaultInstance() : maxFee_;
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.Bips max_fee = 9;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.Bips, io.lightcone.data.types.Bips.Builder, io.lightcone.data.types.BipsOrBuilder> 
        getMaxFeeFieldBuilder() {
      if (maxFeeBuilder_ == null) {
        maxFeeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.lightcone.data.types.Bips, io.lightcone.data.types.Bips.Builder, io.lightcone.data.types.BipsOrBuilder>(
                getMaxFee(),
                getParentForChildren(),
                isClean());
        maxFee_ = null;
      }
      return maxFeeBuilder_;
    }

    private io.lightcone.data.types.Bips fee_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.Bips, io.lightcone.data.types.Bips.Builder, io.lightcone.data.types.BipsOrBuilder> feeBuilder_;
    /**
     * <code>optional .io.lightcone.data.types.Bips fee = 10;</code>
     */
    public boolean hasFee() {
      return feeBuilder_ != null || fee_ != null;
    }
    /**
     * <code>optional .io.lightcone.data.types.Bips fee = 10;</code>
     */
    public io.lightcone.data.types.Bips getFee() {
      if (feeBuilder_ == null) {
        return fee_ == null ? io.lightcone.data.types.Bips.getDefaultInstance() : fee_;
      } else {
        return feeBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.Bips fee = 10;</code>
     */
    public Builder setFee(io.lightcone.data.types.Bips value) {
      if (feeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        fee_ = value;
        onChanged();
      } else {
        feeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Bips fee = 10;</code>
     */
    public Builder setFee(
        io.lightcone.data.types.Bips.Builder builderForValue) {
      if (feeBuilder_ == null) {
        fee_ = builderForValue.build();
        onChanged();
      } else {
        feeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Bips fee = 10;</code>
     */
    public Builder mergeFee(io.lightcone.data.types.Bips value) {
      if (feeBuilder_ == null) {
        if (fee_ != null) {
          fee_ =
            io.lightcone.data.types.Bips.newBuilder(fee_).mergeFrom(value).buildPartial();
        } else {
          fee_ = value;
        }
        onChanged();
      } else {
        feeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Bips fee = 10;</code>
     */
    public Builder clearFee() {
      if (feeBuilder_ == null) {
        fee_ = null;
        onChanged();
      } else {
        fee_ = null;
        feeBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Bips fee = 10;</code>
     */
    public io.lightcone.data.types.Bips.Builder getFeeBuilder() {
      
      onChanged();
      return getFeeFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .io.lightcone.data.types.Bips fee = 10;</code>
     */
    public io.lightcone.data.types.BipsOrBuilder getFeeOrBuilder() {
      if (feeBuilder_ != null) {
        return feeBuilder_.getMessageOrBuilder();
      } else {
        return fee_ == null ?
            io.lightcone.data.types.Bips.getDefaultInstance() : fee_;
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.Bips fee = 10;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.Bips, io.lightcone.data.types.Bips.Builder, io.lightcone.data.types.BipsOrBuilder> 
        getFeeFieldBuilder() {
      if (feeBuilder_ == null) {
        feeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.lightcone.data.types.Bips, io.lightcone.data.types.Bips.Builder, io.lightcone.data.types.BipsOrBuilder>(
                getFee(),
                getParentForChildren(),
                isClean());
        fee_ = null;
      }
      return feeBuilder_;
    }

    private io.lightcone.data.types.Bips rebate_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.Bips, io.lightcone.data.types.Bips.Builder, io.lightcone.data.types.BipsOrBuilder> rebateBuilder_;
    /**
     * <code>optional .io.lightcone.data.types.Bips rebate = 11;</code>
     */
    public boolean hasRebate() {
      return rebateBuilder_ != null || rebate_ != null;
    }
    /**
     * <code>optional .io.lightcone.data.types.Bips rebate = 11;</code>
     */
    public io.lightcone.data.types.Bips getRebate() {
      if (rebateBuilder_ == null) {
        return rebate_ == null ? io.lightcone.data.types.Bips.getDefaultInstance() : rebate_;
      } else {
        return rebateBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.Bips rebate = 11;</code>
     */
    public Builder setRebate(io.lightcone.data.types.Bips value) {
      if (rebateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        rebate_ = value;
        onChanged();
      } else {
        rebateBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Bips rebate = 11;</code>
     */
    public Builder setRebate(
        io.lightcone.data.types.Bips.Builder builderForValue) {
      if (rebateBuilder_ == null) {
        rebate_ = builderForValue.build();
        onChanged();
      } else {
        rebateBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Bips rebate = 11;</code>
     */
    public Builder mergeRebate(io.lightcone.data.types.Bips value) {
      if (rebateBuilder_ == null) {
        if (rebate_ != null) {
          rebate_ =
            io.lightcone.data.types.Bips.newBuilder(rebate_).mergeFrom(value).buildPartial();
        } else {
          rebate_ = value;
        }
        onChanged();
      } else {
        rebateBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Bips rebate = 11;</code>
     */
    public Builder clearRebate() {
      if (rebateBuilder_ == null) {
        rebate_ = null;
        onChanged();
      } else {
        rebate_ = null;
        rebateBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Bips rebate = 11;</code>
     */
    public io.lightcone.data.types.Bips.Builder getRebateBuilder() {
      
      onChanged();
      return getRebateFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .io.lightcone.data.types.Bips rebate = 11;</code>
     */
    public io.lightcone.data.types.BipsOrBuilder getRebateOrBuilder() {
      if (rebateBuilder_ != null) {
        return rebateBuilder_.getMessageOrBuilder();
      } else {
        return rebate_ == null ?
            io.lightcone.data.types.Bips.getDefaultInstance() : rebate_;
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.Bips rebate = 11;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.Bips, io.lightcone.data.types.Bips.Builder, io.lightcone.data.types.BipsOrBuilder> 
        getRebateFieldBuilder() {
      if (rebateBuilder_ == null) {
        rebateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.lightcone.data.types.Bips, io.lightcone.data.types.Bips.Builder, io.lightcone.data.types.BipsOrBuilder>(
                getRebate(),
                getParentForChildren(),
                isClean());
        rebate_ = null;
      }
      return rebateBuilder_;
    }

    private boolean allOrNone_ ;
    /**
     * <code>optional bool all_or_none = 12;</code>
     */
    public boolean getAllOrNone() {
      return allOrNone_;
    }
    /**
     * <code>optional bool all_or_none = 12;</code>
     */
    public Builder setAllOrNone(boolean value) {
      
      allOrNone_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bool all_or_none = 12;</code>
     */
    public Builder clearAllOrNone() {
      
      allOrNone_ = false;
      onChanged();
      return this;
    }

    private long validSince_ ;
    /**
     * <code>optional uint64 valid_since = 13;</code>
     */
    public long getValidSince() {
      return validSince_;
    }
    /**
     * <code>optional uint64 valid_since = 13;</code>
     */
    public Builder setValidSince(long value) {
      
      validSince_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional uint64 valid_since = 13;</code>
     */
    public Builder clearValidSince() {
      
      validSince_ = 0L;
      onChanged();
      return this;
    }

    private long validUntil_ ;
    /**
     * <code>optional uint64 valid_until = 14;</code>
     */
    public long getValidUntil() {
      return validUntil_;
    }
    /**
     * <code>optional uint64 valid_until = 14;</code>
     */
    public Builder setValidUntil(long value) {
      
      validUntil_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional uint64 valid_until = 14;</code>
     */
    public Builder clearValidUntil() {
      
      validUntil_ = 0L;
      onChanged();
      return this;
    }

    private boolean buy_ ;
    /**
     * <code>optional bool buy = 15;</code>
     */
    public boolean getBuy() {
      return buy_;
    }
    /**
     * <code>optional bool buy = 15;</code>
     */
    public Builder setBuy(boolean value) {
      
      buy_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bool buy = 15;</code>
     */
    public Builder clearBuy() {
      
      buy_ = false;
      onChanged();
      return this;
    }

    private io.lightcone.data.types.EdDSAPubKey tradingPubKey_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.EdDSAPubKey, io.lightcone.data.types.EdDSAPubKey.Builder, io.lightcone.data.types.EdDSAPubKeyOrBuilder> tradingPubKeyBuilder_;
    /**
     * <code>optional .io.lightcone.data.types.EdDSAPubKey trading_pub_key = 16;</code>
     */
    public boolean hasTradingPubKey() {
      return tradingPubKeyBuilder_ != null || tradingPubKey_ != null;
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSAPubKey trading_pub_key = 16;</code>
     */
    public io.lightcone.data.types.EdDSAPubKey getTradingPubKey() {
      if (tradingPubKeyBuilder_ == null) {
        return tradingPubKey_ == null ? io.lightcone.data.types.EdDSAPubKey.getDefaultInstance() : tradingPubKey_;
      } else {
        return tradingPubKeyBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSAPubKey trading_pub_key = 16;</code>
     */
    public Builder setTradingPubKey(io.lightcone.data.types.EdDSAPubKey value) {
      if (tradingPubKeyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        tradingPubKey_ = value;
        onChanged();
      } else {
        tradingPubKeyBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSAPubKey trading_pub_key = 16;</code>
     */
    public Builder setTradingPubKey(
        io.lightcone.data.types.EdDSAPubKey.Builder builderForValue) {
      if (tradingPubKeyBuilder_ == null) {
        tradingPubKey_ = builderForValue.build();
        onChanged();
      } else {
        tradingPubKeyBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSAPubKey trading_pub_key = 16;</code>
     */
    public Builder mergeTradingPubKey(io.lightcone.data.types.EdDSAPubKey value) {
      if (tradingPubKeyBuilder_ == null) {
        if (tradingPubKey_ != null) {
          tradingPubKey_ =
            io.lightcone.data.types.EdDSAPubKey.newBuilder(tradingPubKey_).mergeFrom(value).buildPartial();
        } else {
          tradingPubKey_ = value;
        }
        onChanged();
      } else {
        tradingPubKeyBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSAPubKey trading_pub_key = 16;</code>
     */
    public Builder clearTradingPubKey() {
      if (tradingPubKeyBuilder_ == null) {
        tradingPubKey_ = null;
        onChanged();
      } else {
        tradingPubKey_ = null;
        tradingPubKeyBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSAPubKey trading_pub_key = 16;</code>
     */
    public io.lightcone.data.types.EdDSAPubKey.Builder getTradingPubKeyBuilder() {
      
      onChanged();
      return getTradingPubKeyFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSAPubKey trading_pub_key = 16;</code>
     */
    public io.lightcone.data.types.EdDSAPubKeyOrBuilder getTradingPubKeyOrBuilder() {
      if (tradingPubKeyBuilder_ != null) {
        return tradingPubKeyBuilder_.getMessageOrBuilder();
      } else {
        return tradingPubKey_ == null ?
            io.lightcone.data.types.EdDSAPubKey.getDefaultInstance() : tradingPubKey_;
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSAPubKey trading_pub_key = 16;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.EdDSAPubKey, io.lightcone.data.types.EdDSAPubKey.Builder, io.lightcone.data.types.EdDSAPubKeyOrBuilder> 
        getTradingPubKeyFieldBuilder() {
      if (tradingPubKeyBuilder_ == null) {
        tradingPubKeyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.lightcone.data.types.EdDSAPubKey, io.lightcone.data.types.EdDSAPubKey.Builder, io.lightcone.data.types.EdDSAPubKeyOrBuilder>(
                getTradingPubKey(),
                getParentForChildren(),
                isClean());
        tradingPubKey_ = null;
      }
      return tradingPubKeyBuilder_;
    }

    private io.lightcone.data.types.EdDSAPubKey dualAuthPubKey_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.EdDSAPubKey, io.lightcone.data.types.EdDSAPubKey.Builder, io.lightcone.data.types.EdDSAPubKeyOrBuilder> dualAuthPubKeyBuilder_;
    /**
     * <code>optional .io.lightcone.data.types.EdDSAPubKey dual_auth_pub_key = 17;</code>
     */
    public boolean hasDualAuthPubKey() {
      return dualAuthPubKeyBuilder_ != null || dualAuthPubKey_ != null;
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSAPubKey dual_auth_pub_key = 17;</code>
     */
    public io.lightcone.data.types.EdDSAPubKey getDualAuthPubKey() {
      if (dualAuthPubKeyBuilder_ == null) {
        return dualAuthPubKey_ == null ? io.lightcone.data.types.EdDSAPubKey.getDefaultInstance() : dualAuthPubKey_;
      } else {
        return dualAuthPubKeyBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSAPubKey dual_auth_pub_key = 17;</code>
     */
    public Builder setDualAuthPubKey(io.lightcone.data.types.EdDSAPubKey value) {
      if (dualAuthPubKeyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        dualAuthPubKey_ = value;
        onChanged();
      } else {
        dualAuthPubKeyBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSAPubKey dual_auth_pub_key = 17;</code>
     */
    public Builder setDualAuthPubKey(
        io.lightcone.data.types.EdDSAPubKey.Builder builderForValue) {
      if (dualAuthPubKeyBuilder_ == null) {
        dualAuthPubKey_ = builderForValue.build();
        onChanged();
      } else {
        dualAuthPubKeyBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSAPubKey dual_auth_pub_key = 17;</code>
     */
    public Builder mergeDualAuthPubKey(io.lightcone.data.types.EdDSAPubKey value) {
      if (dualAuthPubKeyBuilder_ == null) {
        if (dualAuthPubKey_ != null) {
          dualAuthPubKey_ =
            io.lightcone.data.types.EdDSAPubKey.newBuilder(dualAuthPubKey_).mergeFrom(value).buildPartial();
        } else {
          dualAuthPubKey_ = value;
        }
        onChanged();
      } else {
        dualAuthPubKeyBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSAPubKey dual_auth_pub_key = 17;</code>
     */
    public Builder clearDualAuthPubKey() {
      if (dualAuthPubKeyBuilder_ == null) {
        dualAuthPubKey_ = null;
        onChanged();
      } else {
        dualAuthPubKey_ = null;
        dualAuthPubKeyBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSAPubKey dual_auth_pub_key = 17;</code>
     */
    public io.lightcone.data.types.EdDSAPubKey.Builder getDualAuthPubKeyBuilder() {
      
      onChanged();
      return getDualAuthPubKeyFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSAPubKey dual_auth_pub_key = 17;</code>
     */
    public io.lightcone.data.types.EdDSAPubKeyOrBuilder getDualAuthPubKeyOrBuilder() {
      if (dualAuthPubKeyBuilder_ != null) {
        return dualAuthPubKeyBuilder_.getMessageOrBuilder();
      } else {
        return dualAuthPubKey_ == null ?
            io.lightcone.data.types.EdDSAPubKey.getDefaultInstance() : dualAuthPubKey_;
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSAPubKey dual_auth_pub_key = 17;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.EdDSAPubKey, io.lightcone.data.types.EdDSAPubKey.Builder, io.lightcone.data.types.EdDSAPubKeyOrBuilder> 
        getDualAuthPubKeyFieldBuilder() {
      if (dualAuthPubKeyBuilder_ == null) {
        dualAuthPubKeyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.lightcone.data.types.EdDSAPubKey, io.lightcone.data.types.EdDSAPubKey.Builder, io.lightcone.data.types.EdDSAPubKeyOrBuilder>(
                getDualAuthPubKey(),
                getParentForChildren(),
                isClean());
        dualAuthPubKey_ = null;
      }
      return dualAuthPubKeyBuilder_;
    }

    private io.lightcone.data.types.EdDSAPrivKey dualAuthPrivKey_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.EdDSAPrivKey, io.lightcone.data.types.EdDSAPrivKey.Builder, io.lightcone.data.types.EdDSAPrivKeyOrBuilder> dualAuthPrivKeyBuilder_;
    /**
     * <code>optional .io.lightcone.data.types.EdDSAPrivKey dual_auth_priv_key = 18;</code>
     */
    public boolean hasDualAuthPrivKey() {
      return dualAuthPrivKeyBuilder_ != null || dualAuthPrivKey_ != null;
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSAPrivKey dual_auth_priv_key = 18;</code>
     */
    public io.lightcone.data.types.EdDSAPrivKey getDualAuthPrivKey() {
      if (dualAuthPrivKeyBuilder_ == null) {
        return dualAuthPrivKey_ == null ? io.lightcone.data.types.EdDSAPrivKey.getDefaultInstance() : dualAuthPrivKey_;
      } else {
        return dualAuthPrivKeyBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSAPrivKey dual_auth_priv_key = 18;</code>
     */
    public Builder setDualAuthPrivKey(io.lightcone.data.types.EdDSAPrivKey value) {
      if (dualAuthPrivKeyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        dualAuthPrivKey_ = value;
        onChanged();
      } else {
        dualAuthPrivKeyBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSAPrivKey dual_auth_priv_key = 18;</code>
     */
    public Builder setDualAuthPrivKey(
        io.lightcone.data.types.EdDSAPrivKey.Builder builderForValue) {
      if (dualAuthPrivKeyBuilder_ == null) {
        dualAuthPrivKey_ = builderForValue.build();
        onChanged();
      } else {
        dualAuthPrivKeyBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSAPrivKey dual_auth_priv_key = 18;</code>
     */
    public Builder mergeDualAuthPrivKey(io.lightcone.data.types.EdDSAPrivKey value) {
      if (dualAuthPrivKeyBuilder_ == null) {
        if (dualAuthPrivKey_ != null) {
          dualAuthPrivKey_ =
            io.lightcone.data.types.EdDSAPrivKey.newBuilder(dualAuthPrivKey_).mergeFrom(value).buildPartial();
        } else {
          dualAuthPrivKey_ = value;
        }
        onChanged();
      } else {
        dualAuthPrivKeyBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSAPrivKey dual_auth_priv_key = 18;</code>
     */
    public Builder clearDualAuthPrivKey() {
      if (dualAuthPrivKeyBuilder_ == null) {
        dualAuthPrivKey_ = null;
        onChanged();
      } else {
        dualAuthPrivKey_ = null;
        dualAuthPrivKeyBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSAPrivKey dual_auth_priv_key = 18;</code>
     */
    public io.lightcone.data.types.EdDSAPrivKey.Builder getDualAuthPrivKeyBuilder() {
      
      onChanged();
      return getDualAuthPrivKeyFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSAPrivKey dual_auth_priv_key = 18;</code>
     */
    public io.lightcone.data.types.EdDSAPrivKeyOrBuilder getDualAuthPrivKeyOrBuilder() {
      if (dualAuthPrivKeyBuilder_ != null) {
        return dualAuthPrivKeyBuilder_.getMessageOrBuilder();
      } else {
        return dualAuthPrivKey_ == null ?
            io.lightcone.data.types.EdDSAPrivKey.getDefaultInstance() : dualAuthPrivKey_;
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSAPrivKey dual_auth_priv_key = 18;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.EdDSAPrivKey, io.lightcone.data.types.EdDSAPrivKey.Builder, io.lightcone.data.types.EdDSAPrivKeyOrBuilder> 
        getDualAuthPrivKeyFieldBuilder() {
      if (dualAuthPrivKeyBuilder_ == null) {
        dualAuthPrivKeyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.lightcone.data.types.EdDSAPrivKey, io.lightcone.data.types.EdDSAPrivKey.Builder, io.lightcone.data.types.EdDSAPrivKeyOrBuilder>(
                getDualAuthPrivKey(),
                getParentForChildren(),
                isClean());
        dualAuthPrivKey_ = null;
      }
      return dualAuthPrivKeyBuilder_;
    }

    private io.lightcone.data.types.EdDSASignature tradingSig_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.EdDSASignature, io.lightcone.data.types.EdDSASignature.Builder, io.lightcone.data.types.EdDSASignatureOrBuilder> tradingSigBuilder_;
    /**
     * <code>optional .io.lightcone.data.types.EdDSASignature trading_sig = 19;</code>
     */
    public boolean hasTradingSig() {
      return tradingSigBuilder_ != null || tradingSig_ != null;
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSASignature trading_sig = 19;</code>
     */
    public io.lightcone.data.types.EdDSASignature getTradingSig() {
      if (tradingSigBuilder_ == null) {
        return tradingSig_ == null ? io.lightcone.data.types.EdDSASignature.getDefaultInstance() : tradingSig_;
      } else {
        return tradingSigBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSASignature trading_sig = 19;</code>
     */
    public Builder setTradingSig(io.lightcone.data.types.EdDSASignature value) {
      if (tradingSigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        tradingSig_ = value;
        onChanged();
      } else {
        tradingSigBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSASignature trading_sig = 19;</code>
     */
    public Builder setTradingSig(
        io.lightcone.data.types.EdDSASignature.Builder builderForValue) {
      if (tradingSigBuilder_ == null) {
        tradingSig_ = builderForValue.build();
        onChanged();
      } else {
        tradingSigBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSASignature trading_sig = 19;</code>
     */
    public Builder mergeTradingSig(io.lightcone.data.types.EdDSASignature value) {
      if (tradingSigBuilder_ == null) {
        if (tradingSig_ != null) {
          tradingSig_ =
            io.lightcone.data.types.EdDSASignature.newBuilder(tradingSig_).mergeFrom(value).buildPartial();
        } else {
          tradingSig_ = value;
        }
        onChanged();
      } else {
        tradingSigBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSASignature trading_sig = 19;</code>
     */
    public Builder clearTradingSig() {
      if (tradingSigBuilder_ == null) {
        tradingSig_ = null;
        onChanged();
      } else {
        tradingSig_ = null;
        tradingSigBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSASignature trading_sig = 19;</code>
     */
    public io.lightcone.data.types.EdDSASignature.Builder getTradingSigBuilder() {
      
      onChanged();
      return getTradingSigFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSASignature trading_sig = 19;</code>
     */
    public io.lightcone.data.types.EdDSASignatureOrBuilder getTradingSigOrBuilder() {
      if (tradingSigBuilder_ != null) {
        return tradingSigBuilder_.getMessageOrBuilder();
      } else {
        return tradingSig_ == null ?
            io.lightcone.data.types.EdDSASignature.getDefaultInstance() : tradingSig_;
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.EdDSASignature trading_sig = 19;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.EdDSASignature, io.lightcone.data.types.EdDSASignature.Builder, io.lightcone.data.types.EdDSASignatureOrBuilder> 
        getTradingSigFieldBuilder() {
      if (tradingSigBuilder_ == null) {
        tradingSigBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.lightcone.data.types.EdDSASignature, io.lightcone.data.types.EdDSASignature.Builder, io.lightcone.data.types.EdDSASignatureOrBuilder>(
                getTradingSig(),
                getParentForChildren(),
                isClean());
        tradingSig_ = null;
      }
      return tradingSigBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:io.lightcone.data.order.Order)
  }

  // @@protoc_insertion_point(class_scope:io.lightcone.data.order.Order)
  private static final io.lightcone.data.order.Order DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.lightcone.data.order.Order();
  }

  public static io.lightcone.data.order.Order getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Order>
      PARSER = new com.google.protobuf.AbstractParser<Order>() {
    public Order parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      try {
        return new Order(input, extensionRegistry);
      } catch (RuntimeException e) {
        if (e.getCause() instanceof
            com.google.protobuf.InvalidProtocolBufferException) {
          throw (com.google.protobuf.InvalidProtocolBufferException)
              e.getCause();
        }
        throw e;
      }
    }
  };

  public static com.google.protobuf.Parser<Order> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Order> getParserForType() {
    return PARSER;
  }

  public io.lightcone.data.order.Order getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

