// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data_order.proto

package io.lightcone.data.order;

/**
 * Protobuf type {@code io.lightcone.data.order.TokenAmounts}
 *
 * <pre>
 * new fee model
 * </pre>
 */
public  final class TokenAmounts extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:io.lightcone.data.order.TokenAmounts)
    TokenAmountsOrBuilder {
  // Use TokenAmounts.newBuilder() to construct.
  private TokenAmounts(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private TokenAmounts() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private TokenAmounts(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            io.lightcone.data.types.Amount.Builder subBuilder = null;
            if (amountS_ != null) {
              subBuilder = amountS_.toBuilder();
            }
            amountS_ = input.readMessage(io.lightcone.data.types.Amount.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(amountS_);
              amountS_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            io.lightcone.data.types.Amount.Builder subBuilder = null;
            if (amountB_ != null) {
              subBuilder = amountB_.toBuilder();
            }
            amountB_ = input.readMessage(io.lightcone.data.types.Amount.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(amountB_);
              amountB_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw new RuntimeException(e.setUnfinishedMessage(this));
    } catch (java.io.IOException e) {
      throw new RuntimeException(
          new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this));
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.lightcone.data.order.DataOrder.internal_static_io_lightcone_data_order_TokenAmounts_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.lightcone.data.order.DataOrder.internal_static_io_lightcone_data_order_TokenAmounts_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.lightcone.data.order.TokenAmounts.class, io.lightcone.data.order.TokenAmounts.Builder.class);
  }

  public static final int AMOUNT_S_FIELD_NUMBER = 1;
  private io.lightcone.data.types.Amount amountS_;
  /**
   * <code>optional .io.lightcone.data.types.Amount amount_s = 1;</code>
   */
  public boolean hasAmountS() {
    return amountS_ != null;
  }
  /**
   * <code>optional .io.lightcone.data.types.Amount amount_s = 1;</code>
   */
  public io.lightcone.data.types.Amount getAmountS() {
    return amountS_ == null ? io.lightcone.data.types.Amount.getDefaultInstance() : amountS_;
  }
  /**
   * <code>optional .io.lightcone.data.types.Amount amount_s = 1;</code>
   */
  public io.lightcone.data.types.AmountOrBuilder getAmountSOrBuilder() {
    return getAmountS();
  }

  public static final int AMOUNT_B_FIELD_NUMBER = 2;
  private io.lightcone.data.types.Amount amountB_;
  /**
   * <code>optional .io.lightcone.data.types.Amount amount_b = 2;</code>
   */
  public boolean hasAmountB() {
    return amountB_ != null;
  }
  /**
   * <code>optional .io.lightcone.data.types.Amount amount_b = 2;</code>
   */
  public io.lightcone.data.types.Amount getAmountB() {
    return amountB_ == null ? io.lightcone.data.types.Amount.getDefaultInstance() : amountB_;
  }
  /**
   * <code>optional .io.lightcone.data.types.Amount amount_b = 2;</code>
   */
  public io.lightcone.data.types.AmountOrBuilder getAmountBOrBuilder() {
    return getAmountB();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (amountS_ != null) {
      output.writeMessage(1, getAmountS());
    }
    if (amountB_ != null) {
      output.writeMessage(2, getAmountB());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (amountS_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getAmountS());
    }
    if (amountB_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getAmountB());
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  public static io.lightcone.data.order.TokenAmounts parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.lightcone.data.order.TokenAmounts parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.lightcone.data.order.TokenAmounts parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.lightcone.data.order.TokenAmounts parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.lightcone.data.order.TokenAmounts parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static io.lightcone.data.order.TokenAmounts parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static io.lightcone.data.order.TokenAmounts parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static io.lightcone.data.order.TokenAmounts parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static io.lightcone.data.order.TokenAmounts parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static io.lightcone.data.order.TokenAmounts parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.lightcone.data.order.TokenAmounts prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code io.lightcone.data.order.TokenAmounts}
   *
   * <pre>
   * new fee model
   * </pre>
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:io.lightcone.data.order.TokenAmounts)
      io.lightcone.data.order.TokenAmountsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.lightcone.data.order.DataOrder.internal_static_io_lightcone_data_order_TokenAmounts_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.lightcone.data.order.DataOrder.internal_static_io_lightcone_data_order_TokenAmounts_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.lightcone.data.order.TokenAmounts.class, io.lightcone.data.order.TokenAmounts.Builder.class);
    }

    // Construct using io.lightcone.data.order.TokenAmounts.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      if (amountSBuilder_ == null) {
        amountS_ = null;
      } else {
        amountS_ = null;
        amountSBuilder_ = null;
      }
      if (amountBBuilder_ == null) {
        amountB_ = null;
      } else {
        amountB_ = null;
        amountBBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.lightcone.data.order.DataOrder.internal_static_io_lightcone_data_order_TokenAmounts_descriptor;
    }

    public io.lightcone.data.order.TokenAmounts getDefaultInstanceForType() {
      return io.lightcone.data.order.TokenAmounts.getDefaultInstance();
    }

    public io.lightcone.data.order.TokenAmounts build() {
      io.lightcone.data.order.TokenAmounts result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public io.lightcone.data.order.TokenAmounts buildPartial() {
      io.lightcone.data.order.TokenAmounts result = new io.lightcone.data.order.TokenAmounts(this);
      if (amountSBuilder_ == null) {
        result.amountS_ = amountS_;
      } else {
        result.amountS_ = amountSBuilder_.build();
      }
      if (amountBBuilder_ == null) {
        result.amountB_ = amountB_;
      } else {
        result.amountB_ = amountBBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.lightcone.data.order.TokenAmounts) {
        return mergeFrom((io.lightcone.data.order.TokenAmounts)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.lightcone.data.order.TokenAmounts other) {
      if (other == io.lightcone.data.order.TokenAmounts.getDefaultInstance()) return this;
      if (other.hasAmountS()) {
        mergeAmountS(other.getAmountS());
      }
      if (other.hasAmountB()) {
        mergeAmountB(other.getAmountB());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.lightcone.data.order.TokenAmounts parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.lightcone.data.order.TokenAmounts) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private io.lightcone.data.types.Amount amountS_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.Amount, io.lightcone.data.types.Amount.Builder, io.lightcone.data.types.AmountOrBuilder> amountSBuilder_;
    /**
     * <code>optional .io.lightcone.data.types.Amount amount_s = 1;</code>
     */
    public boolean hasAmountS() {
      return amountSBuilder_ != null || amountS_ != null;
    }
    /**
     * <code>optional .io.lightcone.data.types.Amount amount_s = 1;</code>
     */
    public io.lightcone.data.types.Amount getAmountS() {
      if (amountSBuilder_ == null) {
        return amountS_ == null ? io.lightcone.data.types.Amount.getDefaultInstance() : amountS_;
      } else {
        return amountSBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.Amount amount_s = 1;</code>
     */
    public Builder setAmountS(io.lightcone.data.types.Amount value) {
      if (amountSBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        amountS_ = value;
        onChanged();
      } else {
        amountSBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Amount amount_s = 1;</code>
     */
    public Builder setAmountS(
        io.lightcone.data.types.Amount.Builder builderForValue) {
      if (amountSBuilder_ == null) {
        amountS_ = builderForValue.build();
        onChanged();
      } else {
        amountSBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Amount amount_s = 1;</code>
     */
    public Builder mergeAmountS(io.lightcone.data.types.Amount value) {
      if (amountSBuilder_ == null) {
        if (amountS_ != null) {
          amountS_ =
            io.lightcone.data.types.Amount.newBuilder(amountS_).mergeFrom(value).buildPartial();
        } else {
          amountS_ = value;
        }
        onChanged();
      } else {
        amountSBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Amount amount_s = 1;</code>
     */
    public Builder clearAmountS() {
      if (amountSBuilder_ == null) {
        amountS_ = null;
        onChanged();
      } else {
        amountS_ = null;
        amountSBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Amount amount_s = 1;</code>
     */
    public io.lightcone.data.types.Amount.Builder getAmountSBuilder() {
      
      onChanged();
      return getAmountSFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .io.lightcone.data.types.Amount amount_s = 1;</code>
     */
    public io.lightcone.data.types.AmountOrBuilder getAmountSOrBuilder() {
      if (amountSBuilder_ != null) {
        return amountSBuilder_.getMessageOrBuilder();
      } else {
        return amountS_ == null ?
            io.lightcone.data.types.Amount.getDefaultInstance() : amountS_;
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.Amount amount_s = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.Amount, io.lightcone.data.types.Amount.Builder, io.lightcone.data.types.AmountOrBuilder> 
        getAmountSFieldBuilder() {
      if (amountSBuilder_ == null) {
        amountSBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.lightcone.data.types.Amount, io.lightcone.data.types.Amount.Builder, io.lightcone.data.types.AmountOrBuilder>(
                getAmountS(),
                getParentForChildren(),
                isClean());
        amountS_ = null;
      }
      return amountSBuilder_;
    }

    private io.lightcone.data.types.Amount amountB_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.Amount, io.lightcone.data.types.Amount.Builder, io.lightcone.data.types.AmountOrBuilder> amountBBuilder_;
    /**
     * <code>optional .io.lightcone.data.types.Amount amount_b = 2;</code>
     */
    public boolean hasAmountB() {
      return amountBBuilder_ != null || amountB_ != null;
    }
    /**
     * <code>optional .io.lightcone.data.types.Amount amount_b = 2;</code>
     */
    public io.lightcone.data.types.Amount getAmountB() {
      if (amountBBuilder_ == null) {
        return amountB_ == null ? io.lightcone.data.types.Amount.getDefaultInstance() : amountB_;
      } else {
        return amountBBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.Amount amount_b = 2;</code>
     */
    public Builder setAmountB(io.lightcone.data.types.Amount value) {
      if (amountBBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        amountB_ = value;
        onChanged();
      } else {
        amountBBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Amount amount_b = 2;</code>
     */
    public Builder setAmountB(
        io.lightcone.data.types.Amount.Builder builderForValue) {
      if (amountBBuilder_ == null) {
        amountB_ = builderForValue.build();
        onChanged();
      } else {
        amountBBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Amount amount_b = 2;</code>
     */
    public Builder mergeAmountB(io.lightcone.data.types.Amount value) {
      if (amountBBuilder_ == null) {
        if (amountB_ != null) {
          amountB_ =
            io.lightcone.data.types.Amount.newBuilder(amountB_).mergeFrom(value).buildPartial();
        } else {
          amountB_ = value;
        }
        onChanged();
      } else {
        amountBBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Amount amount_b = 2;</code>
     */
    public Builder clearAmountB() {
      if (amountBBuilder_ == null) {
        amountB_ = null;
        onChanged();
      } else {
        amountB_ = null;
        amountBBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.Amount amount_b = 2;</code>
     */
    public io.lightcone.data.types.Amount.Builder getAmountBBuilder() {
      
      onChanged();
      return getAmountBFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .io.lightcone.data.types.Amount amount_b = 2;</code>
     */
    public io.lightcone.data.types.AmountOrBuilder getAmountBOrBuilder() {
      if (amountBBuilder_ != null) {
        return amountBBuilder_.getMessageOrBuilder();
      } else {
        return amountB_ == null ?
            io.lightcone.data.types.Amount.getDefaultInstance() : amountB_;
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.Amount amount_b = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.Amount, io.lightcone.data.types.Amount.Builder, io.lightcone.data.types.AmountOrBuilder> 
        getAmountBFieldBuilder() {
      if (amountBBuilder_ == null) {
        amountBBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.lightcone.data.types.Amount, io.lightcone.data.types.Amount.Builder, io.lightcone.data.types.AmountOrBuilder>(
                getAmountB(),
                getParentForChildren(),
                isClean());
        amountB_ = null;
      }
      return amountBBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:io.lightcone.data.order.TokenAmounts)
  }

  // @@protoc_insertion_point(class_scope:io.lightcone.data.order.TokenAmounts)
  private static final io.lightcone.data.order.TokenAmounts DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.lightcone.data.order.TokenAmounts();
  }

  public static io.lightcone.data.order.TokenAmounts getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TokenAmounts>
      PARSER = new com.google.protobuf.AbstractParser<TokenAmounts>() {
    public TokenAmounts parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      try {
        return new TokenAmounts(input, extensionRegistry);
      } catch (RuntimeException e) {
        if (e.getCause() instanceof
            com.google.protobuf.InvalidProtocolBufferException) {
          throw (com.google.protobuf.InvalidProtocolBufferException)
              e.getCause();
        }
        throw e;
      }
    }
  };

  public static com.google.protobuf.Parser<TokenAmounts> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TokenAmounts> getParserForType() {
    return PARSER;
  }

  public io.lightcone.data.order.TokenAmounts getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

