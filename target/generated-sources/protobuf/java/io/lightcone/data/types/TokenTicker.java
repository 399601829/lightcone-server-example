// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data_types.proto

package io.lightcone.data.types;

/**
 * Protobuf type {@code io.lightcone.data.types.TokenTicker}
 */
public  final class TokenTicker extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:io.lightcone.data.types.TokenTicker)
    TokenTickerOrBuilder {
  // Use TokenTicker.newBuilder() to construct.
  private TokenTicker(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private TokenTicker() {
    price_ = 0D;
    volume24H_ = 0D;
    percentChange1H_ = 0D;
    percentChange24H_ = 0D;
    percentChange7D_ = 0D;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private TokenTicker(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            io.lightcone.data.types.TokenID.Builder subBuilder = null;
            if (tokenId_ != null) {
              subBuilder = tokenId_.toBuilder();
            }
            tokenId_ = input.readMessage(io.lightcone.data.types.TokenID.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(tokenId_);
              tokenId_ = subBuilder.buildPartial();
            }

            break;
          }
          case 17: {

            price_ = input.readDouble();
            break;
          }
          case 25: {

            volume24H_ = input.readDouble();
            break;
          }
          case 33: {

            percentChange1H_ = input.readDouble();
            break;
          }
          case 41: {

            percentChange24H_ = input.readDouble();
            break;
          }
          case 49: {

            percentChange7D_ = input.readDouble();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw new RuntimeException(e.setUnfinishedMessage(this));
    } catch (java.io.IOException e) {
      throw new RuntimeException(
          new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this));
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.lightcone.data.types.DataTypes.internal_static_io_lightcone_data_types_TokenTicker_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.lightcone.data.types.DataTypes.internal_static_io_lightcone_data_types_TokenTicker_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.lightcone.data.types.TokenTicker.class, io.lightcone.data.types.TokenTicker.Builder.class);
  }

  public static final int TOKEN_ID_FIELD_NUMBER = 1;
  private io.lightcone.data.types.TokenID tokenId_;
  /**
   * <code>optional .io.lightcone.data.types.TokenID token_id = 1;</code>
   *
   * <pre>
   * token address
   * </pre>
   */
  public boolean hasTokenId() {
    return tokenId_ != null;
  }
  /**
   * <code>optional .io.lightcone.data.types.TokenID token_id = 1;</code>
   *
   * <pre>
   * token address
   * </pre>
   */
  public io.lightcone.data.types.TokenID getTokenId() {
    return tokenId_ == null ? io.lightcone.data.types.TokenID.getDefaultInstance() : tokenId_;
  }
  /**
   * <code>optional .io.lightcone.data.types.TokenID token_id = 1;</code>
   *
   * <pre>
   * token address
   * </pre>
   */
  public io.lightcone.data.types.TokenIDOrBuilder getTokenIdOrBuilder() {
    return getTokenId();
  }

  public static final int PRICE_FIELD_NUMBER = 2;
  private double price_;
  /**
   * <code>optional double price = 2;</code>
   *
   * <pre>
   * price of current currency
   * </pre>
   */
  public double getPrice() {
    return price_;
  }

  public static final int VOLUME_24H_FIELD_NUMBER = 3;
  private double volume24H_;
  /**
   * <code>optional double volume_24h = 3;</code>
   *
   * <pre>
   * volume of current currency
   * </pre>
   */
  public double getVolume24H() {
    return volume24H_;
  }

  public static final int PERCENT_CHANGE_1H_FIELD_NUMBER = 4;
  private double percentChange1H_;
  /**
   * <code>optional double percent_change_1h = 4;</code>
   */
  public double getPercentChange1H() {
    return percentChange1H_;
  }

  public static final int PERCENT_CHANGE_24H_FIELD_NUMBER = 5;
  private double percentChange24H_;
  /**
   * <code>optional double percent_change_24h = 5;</code>
   */
  public double getPercentChange24H() {
    return percentChange24H_;
  }

  public static final int PERCENT_CHANGE_7D_FIELD_NUMBER = 6;
  private double percentChange7D_;
  /**
   * <code>optional double percent_change_7d = 6;</code>
   */
  public double getPercentChange7D() {
    return percentChange7D_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (tokenId_ != null) {
      output.writeMessage(1, getTokenId());
    }
    if (price_ != 0D) {
      output.writeDouble(2, price_);
    }
    if (volume24H_ != 0D) {
      output.writeDouble(3, volume24H_);
    }
    if (percentChange1H_ != 0D) {
      output.writeDouble(4, percentChange1H_);
    }
    if (percentChange24H_ != 0D) {
      output.writeDouble(5, percentChange24H_);
    }
    if (percentChange7D_ != 0D) {
      output.writeDouble(6, percentChange7D_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (tokenId_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getTokenId());
    }
    if (price_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(2, price_);
    }
    if (volume24H_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(3, volume24H_);
    }
    if (percentChange1H_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(4, percentChange1H_);
    }
    if (percentChange24H_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(5, percentChange24H_);
    }
    if (percentChange7D_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(6, percentChange7D_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  public static io.lightcone.data.types.TokenTicker parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.lightcone.data.types.TokenTicker parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.lightcone.data.types.TokenTicker parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.lightcone.data.types.TokenTicker parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.lightcone.data.types.TokenTicker parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static io.lightcone.data.types.TokenTicker parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static io.lightcone.data.types.TokenTicker parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static io.lightcone.data.types.TokenTicker parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static io.lightcone.data.types.TokenTicker parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static io.lightcone.data.types.TokenTicker parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.lightcone.data.types.TokenTicker prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code io.lightcone.data.types.TokenTicker}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:io.lightcone.data.types.TokenTicker)
      io.lightcone.data.types.TokenTickerOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.lightcone.data.types.DataTypes.internal_static_io_lightcone_data_types_TokenTicker_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.lightcone.data.types.DataTypes.internal_static_io_lightcone_data_types_TokenTicker_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.lightcone.data.types.TokenTicker.class, io.lightcone.data.types.TokenTicker.Builder.class);
    }

    // Construct using io.lightcone.data.types.TokenTicker.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      if (tokenIdBuilder_ == null) {
        tokenId_ = null;
      } else {
        tokenId_ = null;
        tokenIdBuilder_ = null;
      }
      price_ = 0D;

      volume24H_ = 0D;

      percentChange1H_ = 0D;

      percentChange24H_ = 0D;

      percentChange7D_ = 0D;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.lightcone.data.types.DataTypes.internal_static_io_lightcone_data_types_TokenTicker_descriptor;
    }

    public io.lightcone.data.types.TokenTicker getDefaultInstanceForType() {
      return io.lightcone.data.types.TokenTicker.getDefaultInstance();
    }

    public io.lightcone.data.types.TokenTicker build() {
      io.lightcone.data.types.TokenTicker result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public io.lightcone.data.types.TokenTicker buildPartial() {
      io.lightcone.data.types.TokenTicker result = new io.lightcone.data.types.TokenTicker(this);
      if (tokenIdBuilder_ == null) {
        result.tokenId_ = tokenId_;
      } else {
        result.tokenId_ = tokenIdBuilder_.build();
      }
      result.price_ = price_;
      result.volume24H_ = volume24H_;
      result.percentChange1H_ = percentChange1H_;
      result.percentChange24H_ = percentChange24H_;
      result.percentChange7D_ = percentChange7D_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.lightcone.data.types.TokenTicker) {
        return mergeFrom((io.lightcone.data.types.TokenTicker)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.lightcone.data.types.TokenTicker other) {
      if (other == io.lightcone.data.types.TokenTicker.getDefaultInstance()) return this;
      if (other.hasTokenId()) {
        mergeTokenId(other.getTokenId());
      }
      if (other.getPrice() != 0D) {
        setPrice(other.getPrice());
      }
      if (other.getVolume24H() != 0D) {
        setVolume24H(other.getVolume24H());
      }
      if (other.getPercentChange1H() != 0D) {
        setPercentChange1H(other.getPercentChange1H());
      }
      if (other.getPercentChange24H() != 0D) {
        setPercentChange24H(other.getPercentChange24H());
      }
      if (other.getPercentChange7D() != 0D) {
        setPercentChange7D(other.getPercentChange7D());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.lightcone.data.types.TokenTicker parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.lightcone.data.types.TokenTicker) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private io.lightcone.data.types.TokenID tokenId_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.TokenID, io.lightcone.data.types.TokenID.Builder, io.lightcone.data.types.TokenIDOrBuilder> tokenIdBuilder_;
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_id = 1;</code>
     *
     * <pre>
     * token address
     * </pre>
     */
    public boolean hasTokenId() {
      return tokenIdBuilder_ != null || tokenId_ != null;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_id = 1;</code>
     *
     * <pre>
     * token address
     * </pre>
     */
    public io.lightcone.data.types.TokenID getTokenId() {
      if (tokenIdBuilder_ == null) {
        return tokenId_ == null ? io.lightcone.data.types.TokenID.getDefaultInstance() : tokenId_;
      } else {
        return tokenIdBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_id = 1;</code>
     *
     * <pre>
     * token address
     * </pre>
     */
    public Builder setTokenId(io.lightcone.data.types.TokenID value) {
      if (tokenIdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        tokenId_ = value;
        onChanged();
      } else {
        tokenIdBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_id = 1;</code>
     *
     * <pre>
     * token address
     * </pre>
     */
    public Builder setTokenId(
        io.lightcone.data.types.TokenID.Builder builderForValue) {
      if (tokenIdBuilder_ == null) {
        tokenId_ = builderForValue.build();
        onChanged();
      } else {
        tokenIdBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_id = 1;</code>
     *
     * <pre>
     * token address
     * </pre>
     */
    public Builder mergeTokenId(io.lightcone.data.types.TokenID value) {
      if (tokenIdBuilder_ == null) {
        if (tokenId_ != null) {
          tokenId_ =
            io.lightcone.data.types.TokenID.newBuilder(tokenId_).mergeFrom(value).buildPartial();
        } else {
          tokenId_ = value;
        }
        onChanged();
      } else {
        tokenIdBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_id = 1;</code>
     *
     * <pre>
     * token address
     * </pre>
     */
    public Builder clearTokenId() {
      if (tokenIdBuilder_ == null) {
        tokenId_ = null;
        onChanged();
      } else {
        tokenId_ = null;
        tokenIdBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_id = 1;</code>
     *
     * <pre>
     * token address
     * </pre>
     */
    public io.lightcone.data.types.TokenID.Builder getTokenIdBuilder() {
      
      onChanged();
      return getTokenIdFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_id = 1;</code>
     *
     * <pre>
     * token address
     * </pre>
     */
    public io.lightcone.data.types.TokenIDOrBuilder getTokenIdOrBuilder() {
      if (tokenIdBuilder_ != null) {
        return tokenIdBuilder_.getMessageOrBuilder();
      } else {
        return tokenId_ == null ?
            io.lightcone.data.types.TokenID.getDefaultInstance() : tokenId_;
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID token_id = 1;</code>
     *
     * <pre>
     * token address
     * </pre>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.TokenID, io.lightcone.data.types.TokenID.Builder, io.lightcone.data.types.TokenIDOrBuilder> 
        getTokenIdFieldBuilder() {
      if (tokenIdBuilder_ == null) {
        tokenIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.lightcone.data.types.TokenID, io.lightcone.data.types.TokenID.Builder, io.lightcone.data.types.TokenIDOrBuilder>(
                getTokenId(),
                getParentForChildren(),
                isClean());
        tokenId_ = null;
      }
      return tokenIdBuilder_;
    }

    private double price_ ;
    /**
     * <code>optional double price = 2;</code>
     *
     * <pre>
     * price of current currency
     * </pre>
     */
    public double getPrice() {
      return price_;
    }
    /**
     * <code>optional double price = 2;</code>
     *
     * <pre>
     * price of current currency
     * </pre>
     */
    public Builder setPrice(double value) {
      
      price_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional double price = 2;</code>
     *
     * <pre>
     * price of current currency
     * </pre>
     */
    public Builder clearPrice() {
      
      price_ = 0D;
      onChanged();
      return this;
    }

    private double volume24H_ ;
    /**
     * <code>optional double volume_24h = 3;</code>
     *
     * <pre>
     * volume of current currency
     * </pre>
     */
    public double getVolume24H() {
      return volume24H_;
    }
    /**
     * <code>optional double volume_24h = 3;</code>
     *
     * <pre>
     * volume of current currency
     * </pre>
     */
    public Builder setVolume24H(double value) {
      
      volume24H_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional double volume_24h = 3;</code>
     *
     * <pre>
     * volume of current currency
     * </pre>
     */
    public Builder clearVolume24H() {
      
      volume24H_ = 0D;
      onChanged();
      return this;
    }

    private double percentChange1H_ ;
    /**
     * <code>optional double percent_change_1h = 4;</code>
     */
    public double getPercentChange1H() {
      return percentChange1H_;
    }
    /**
     * <code>optional double percent_change_1h = 4;</code>
     */
    public Builder setPercentChange1H(double value) {
      
      percentChange1H_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional double percent_change_1h = 4;</code>
     */
    public Builder clearPercentChange1H() {
      
      percentChange1H_ = 0D;
      onChanged();
      return this;
    }

    private double percentChange24H_ ;
    /**
     * <code>optional double percent_change_24h = 5;</code>
     */
    public double getPercentChange24H() {
      return percentChange24H_;
    }
    /**
     * <code>optional double percent_change_24h = 5;</code>
     */
    public Builder setPercentChange24H(double value) {
      
      percentChange24H_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional double percent_change_24h = 5;</code>
     */
    public Builder clearPercentChange24H() {
      
      percentChange24H_ = 0D;
      onChanged();
      return this;
    }

    private double percentChange7D_ ;
    /**
     * <code>optional double percent_change_7d = 6;</code>
     */
    public double getPercentChange7D() {
      return percentChange7D_;
    }
    /**
     * <code>optional double percent_change_7d = 6;</code>
     */
    public Builder setPercentChange7D(double value) {
      
      percentChange7D_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional double percent_change_7d = 6;</code>
     */
    public Builder clearPercentChange7D() {
      
      percentChange7D_ = 0D;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:io.lightcone.data.types.TokenTicker)
  }

  // @@protoc_insertion_point(class_scope:io.lightcone.data.types.TokenTicker)
  private static final io.lightcone.data.types.TokenTicker DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.lightcone.data.types.TokenTicker();
  }

  public static io.lightcone.data.types.TokenTicker getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TokenTicker>
      PARSER = new com.google.protobuf.AbstractParser<TokenTicker>() {
    public TokenTicker parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      try {
        return new TokenTicker(input, extensionRegistry);
      } catch (RuntimeException e) {
        if (e.getCause() instanceof
            com.google.protobuf.InvalidProtocolBufferException) {
          throw (com.google.protobuf.InvalidProtocolBufferException)
              e.getCause();
        }
        throw e;
      }
    }
  };

  public static com.google.protobuf.Parser<TokenTicker> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TokenTicker> getParserForType() {
    return PARSER;
  }

  public io.lightcone.data.types.TokenTicker getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

