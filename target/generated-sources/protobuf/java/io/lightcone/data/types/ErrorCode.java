// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data_types.proto

package io.lightcone.data.types;

/**
 * Protobuf enum {@code io.lightcone.data.types.ErrorCode}
 */
public enum ErrorCode
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>ERR_NONE = 0;</code>
   */
  ERR_NONE(0, 0),
  /**
   * <code>ERR_INTERNAL_UNKNOWN = 1;</code>
   */
  ERR_INTERNAL_UNKNOWN(1, 1),
  /**
   * <code>ERR_INVALID_ARGUMENT = 2;</code>
   */
  ERR_INVALID_ARGUMENT(2, 2),
  /**
   * <code>ERR_ETHEREUM_ILLEGAL_ADDRESS = 1001;</code>
   *
   * <pre>
   *1001 -- 2000 ethereum Error
   * </pre>
   */
  ERR_ETHEREUM_ILLEGAL_ADDRESS(3, 1001),
  /**
   * <code>ERR_NO_ACCESSIBLE_ETHEREUM_NODE = 1002;</code>
   */
  ERR_NO_ACCESSIBLE_ETHEREUM_NODE(4, 1002),
  /**
   * <code>ERR_UNEXPECTED_RESPONSE = 1003;</code>
   */
  ERR_UNEXPECTED_RESPONSE(5, 1003),
  /**
   * <code>ERR_INVALID_SIG = 1004;</code>
   */
  ERR_INVALID_SIG(6, 1004),
  /**
   * <code>ERR_BLOCK_UNRECOGNIZED_TYPE = 2001;</code>
   *
   * <pre>
   *2001 -- 3000 Block Error
   * </pre>
   */
  ERR_BLOCK_UNRECOGNIZED_TYPE(7, 2001),
  /**
   * <code>ERR_COMMITTER_NOT_READY = 2002;</code>
   */
  ERR_COMMITTER_NOT_READY(8, 2002),
  /**
   * <code>ERR_PERSISTENCE_INVALID_DATA = 3001;</code>
   *
   * <pre>
   *3001 -- 4000 persistence Error
   * </pre>
   */
  ERR_PERSISTENCE_INVALID_DATA(9, 3001),
  /**
   * <code>ERR_PERSISTENCE_DUPLICATE_INSERT = 3002;</code>
   */
  ERR_PERSISTENCE_DUPLICATE_INSERT(10, 3002),
  /**
   * <code>ERR_PERSISTENCE_UPDATE_FAILED = 3003;</code>
   */
  ERR_PERSISTENCE_UPDATE_FAILED(11, 3003),
  /**
   * <code>ERR_PERSISTENCE_INTERNAL = 3004;</code>
   */
  ERR_PERSISTENCE_INTERNAL(12, 3004),
  UNRECOGNIZED(-1, -1),
  ;

  /**
   * <code>ERR_NONE = 0;</code>
   */
  public static final int ERR_NONE_VALUE = 0;
  /**
   * <code>ERR_INTERNAL_UNKNOWN = 1;</code>
   */
  public static final int ERR_INTERNAL_UNKNOWN_VALUE = 1;
  /**
   * <code>ERR_INVALID_ARGUMENT = 2;</code>
   */
  public static final int ERR_INVALID_ARGUMENT_VALUE = 2;
  /**
   * <code>ERR_ETHEREUM_ILLEGAL_ADDRESS = 1001;</code>
   *
   * <pre>
   *1001 -- 2000 ethereum Error
   * </pre>
   */
  public static final int ERR_ETHEREUM_ILLEGAL_ADDRESS_VALUE = 1001;
  /**
   * <code>ERR_NO_ACCESSIBLE_ETHEREUM_NODE = 1002;</code>
   */
  public static final int ERR_NO_ACCESSIBLE_ETHEREUM_NODE_VALUE = 1002;
  /**
   * <code>ERR_UNEXPECTED_RESPONSE = 1003;</code>
   */
  public static final int ERR_UNEXPECTED_RESPONSE_VALUE = 1003;
  /**
   * <code>ERR_INVALID_SIG = 1004;</code>
   */
  public static final int ERR_INVALID_SIG_VALUE = 1004;
  /**
   * <code>ERR_BLOCK_UNRECOGNIZED_TYPE = 2001;</code>
   *
   * <pre>
   *2001 -- 3000 Block Error
   * </pre>
   */
  public static final int ERR_BLOCK_UNRECOGNIZED_TYPE_VALUE = 2001;
  /**
   * <code>ERR_COMMITTER_NOT_READY = 2002;</code>
   */
  public static final int ERR_COMMITTER_NOT_READY_VALUE = 2002;
  /**
   * <code>ERR_PERSISTENCE_INVALID_DATA = 3001;</code>
   *
   * <pre>
   *3001 -- 4000 persistence Error
   * </pre>
   */
  public static final int ERR_PERSISTENCE_INVALID_DATA_VALUE = 3001;
  /**
   * <code>ERR_PERSISTENCE_DUPLICATE_INSERT = 3002;</code>
   */
  public static final int ERR_PERSISTENCE_DUPLICATE_INSERT_VALUE = 3002;
  /**
   * <code>ERR_PERSISTENCE_UPDATE_FAILED = 3003;</code>
   */
  public static final int ERR_PERSISTENCE_UPDATE_FAILED_VALUE = 3003;
  /**
   * <code>ERR_PERSISTENCE_INTERNAL = 3004;</code>
   */
  public static final int ERR_PERSISTENCE_INTERNAL_VALUE = 3004;


  public final int getNumber() {
    if (index == -1) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  public static ErrorCode valueOf(int value) {
    switch (value) {
      case 0: return ERR_NONE;
      case 1: return ERR_INTERNAL_UNKNOWN;
      case 2: return ERR_INVALID_ARGUMENT;
      case 1001: return ERR_ETHEREUM_ILLEGAL_ADDRESS;
      case 1002: return ERR_NO_ACCESSIBLE_ETHEREUM_NODE;
      case 1003: return ERR_UNEXPECTED_RESPONSE;
      case 1004: return ERR_INVALID_SIG;
      case 2001: return ERR_BLOCK_UNRECOGNIZED_TYPE;
      case 2002: return ERR_COMMITTER_NOT_READY;
      case 3001: return ERR_PERSISTENCE_INVALID_DATA;
      case 3002: return ERR_PERSISTENCE_DUPLICATE_INSERT;
      case 3003: return ERR_PERSISTENCE_UPDATE_FAILED;
      case 3004: return ERR_PERSISTENCE_INTERNAL;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ErrorCode>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ErrorCode> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ErrorCode>() {
          public ErrorCode findValueByNumber(int number) {
            return ErrorCode.valueOf(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(index);
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return io.lightcone.data.types.DataTypes.getDescriptor()
        .getEnumTypes().get(1);
  }

  private static final ErrorCode[] VALUES = values();

  public static ErrorCode valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int index;
  private final int value;

  private ErrorCode(int index, int value) {
    this.index = index;
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:io.lightcone.data.types.ErrorCode)
}

