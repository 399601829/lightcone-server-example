// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data_types.proto

package io.lightcone.data.types;

/**
 * Protobuf type {@code io.lightcone.data.types.Market}
 */
public  final class Market extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:io.lightcone.data.types.Market)
    MarketOrBuilder {
  // Use Market.newBuilder() to construct.
  private Market(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private Market() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private Market(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            io.lightcone.data.types.MarketMetadata.Builder subBuilder = null;
            if (metadata_ != null) {
              subBuilder = metadata_.toBuilder();
            }
            metadata_ = input.readMessage(io.lightcone.data.types.MarketMetadata.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(metadata_);
              metadata_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            io.lightcone.data.types.MarketTicker.Builder subBuilder = null;
            if (ticker_ != null) {
              subBuilder = ticker_.toBuilder();
            }
            ticker_ = input.readMessage(io.lightcone.data.types.MarketTicker.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(ticker_);
              ticker_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw new RuntimeException(e.setUnfinishedMessage(this));
    } catch (java.io.IOException e) {
      throw new RuntimeException(
          new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this));
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.lightcone.data.types.DataTypes.internal_static_io_lightcone_data_types_Market_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.lightcone.data.types.DataTypes.internal_static_io_lightcone_data_types_Market_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.lightcone.data.types.Market.class, io.lightcone.data.types.Market.Builder.class);
  }

  public static final int METADATA_FIELD_NUMBER = 1;
  private io.lightcone.data.types.MarketMetadata metadata_;
  /**
   * <code>optional .io.lightcone.data.types.MarketMetadata metadata = 1;</code>
   */
  public boolean hasMetadata() {
    return metadata_ != null;
  }
  /**
   * <code>optional .io.lightcone.data.types.MarketMetadata metadata = 1;</code>
   */
  public io.lightcone.data.types.MarketMetadata getMetadata() {
    return metadata_ == null ? io.lightcone.data.types.MarketMetadata.getDefaultInstance() : metadata_;
  }
  /**
   * <code>optional .io.lightcone.data.types.MarketMetadata metadata = 1;</code>
   */
  public io.lightcone.data.types.MarketMetadataOrBuilder getMetadataOrBuilder() {
    return getMetadata();
  }

  public static final int TICKER_FIELD_NUMBER = 2;
  private io.lightcone.data.types.MarketTicker ticker_;
  /**
   * <code>optional .io.lightcone.data.types.MarketTicker ticker = 2;</code>
   */
  public boolean hasTicker() {
    return ticker_ != null;
  }
  /**
   * <code>optional .io.lightcone.data.types.MarketTicker ticker = 2;</code>
   */
  public io.lightcone.data.types.MarketTicker getTicker() {
    return ticker_ == null ? io.lightcone.data.types.MarketTicker.getDefaultInstance() : ticker_;
  }
  /**
   * <code>optional .io.lightcone.data.types.MarketTicker ticker = 2;</code>
   */
  public io.lightcone.data.types.MarketTickerOrBuilder getTickerOrBuilder() {
    return getTicker();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (metadata_ != null) {
      output.writeMessage(1, getMetadata());
    }
    if (ticker_ != null) {
      output.writeMessage(2, getTicker());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (metadata_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getMetadata());
    }
    if (ticker_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getTicker());
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  public static io.lightcone.data.types.Market parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.lightcone.data.types.Market parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.lightcone.data.types.Market parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.lightcone.data.types.Market parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.lightcone.data.types.Market parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static io.lightcone.data.types.Market parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static io.lightcone.data.types.Market parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static io.lightcone.data.types.Market parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static io.lightcone.data.types.Market parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static io.lightcone.data.types.Market parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.lightcone.data.types.Market prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code io.lightcone.data.types.Market}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:io.lightcone.data.types.Market)
      io.lightcone.data.types.MarketOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.lightcone.data.types.DataTypes.internal_static_io_lightcone_data_types_Market_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.lightcone.data.types.DataTypes.internal_static_io_lightcone_data_types_Market_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.lightcone.data.types.Market.class, io.lightcone.data.types.Market.Builder.class);
    }

    // Construct using io.lightcone.data.types.Market.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      if (metadataBuilder_ == null) {
        metadata_ = null;
      } else {
        metadata_ = null;
        metadataBuilder_ = null;
      }
      if (tickerBuilder_ == null) {
        ticker_ = null;
      } else {
        ticker_ = null;
        tickerBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.lightcone.data.types.DataTypes.internal_static_io_lightcone_data_types_Market_descriptor;
    }

    public io.lightcone.data.types.Market getDefaultInstanceForType() {
      return io.lightcone.data.types.Market.getDefaultInstance();
    }

    public io.lightcone.data.types.Market build() {
      io.lightcone.data.types.Market result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public io.lightcone.data.types.Market buildPartial() {
      io.lightcone.data.types.Market result = new io.lightcone.data.types.Market(this);
      if (metadataBuilder_ == null) {
        result.metadata_ = metadata_;
      } else {
        result.metadata_ = metadataBuilder_.build();
      }
      if (tickerBuilder_ == null) {
        result.ticker_ = ticker_;
      } else {
        result.ticker_ = tickerBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.lightcone.data.types.Market) {
        return mergeFrom((io.lightcone.data.types.Market)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.lightcone.data.types.Market other) {
      if (other == io.lightcone.data.types.Market.getDefaultInstance()) return this;
      if (other.hasMetadata()) {
        mergeMetadata(other.getMetadata());
      }
      if (other.hasTicker()) {
        mergeTicker(other.getTicker());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.lightcone.data.types.Market parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.lightcone.data.types.Market) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private io.lightcone.data.types.MarketMetadata metadata_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.MarketMetadata, io.lightcone.data.types.MarketMetadata.Builder, io.lightcone.data.types.MarketMetadataOrBuilder> metadataBuilder_;
    /**
     * <code>optional .io.lightcone.data.types.MarketMetadata metadata = 1;</code>
     */
    public boolean hasMetadata() {
      return metadataBuilder_ != null || metadata_ != null;
    }
    /**
     * <code>optional .io.lightcone.data.types.MarketMetadata metadata = 1;</code>
     */
    public io.lightcone.data.types.MarketMetadata getMetadata() {
      if (metadataBuilder_ == null) {
        return metadata_ == null ? io.lightcone.data.types.MarketMetadata.getDefaultInstance() : metadata_;
      } else {
        return metadataBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.MarketMetadata metadata = 1;</code>
     */
    public Builder setMetadata(io.lightcone.data.types.MarketMetadata value) {
      if (metadataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        metadata_ = value;
        onChanged();
      } else {
        metadataBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.MarketMetadata metadata = 1;</code>
     */
    public Builder setMetadata(
        io.lightcone.data.types.MarketMetadata.Builder builderForValue) {
      if (metadataBuilder_ == null) {
        metadata_ = builderForValue.build();
        onChanged();
      } else {
        metadataBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.MarketMetadata metadata = 1;</code>
     */
    public Builder mergeMetadata(io.lightcone.data.types.MarketMetadata value) {
      if (metadataBuilder_ == null) {
        if (metadata_ != null) {
          metadata_ =
            io.lightcone.data.types.MarketMetadata.newBuilder(metadata_).mergeFrom(value).buildPartial();
        } else {
          metadata_ = value;
        }
        onChanged();
      } else {
        metadataBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.MarketMetadata metadata = 1;</code>
     */
    public Builder clearMetadata() {
      if (metadataBuilder_ == null) {
        metadata_ = null;
        onChanged();
      } else {
        metadata_ = null;
        metadataBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.MarketMetadata metadata = 1;</code>
     */
    public io.lightcone.data.types.MarketMetadata.Builder getMetadataBuilder() {
      
      onChanged();
      return getMetadataFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .io.lightcone.data.types.MarketMetadata metadata = 1;</code>
     */
    public io.lightcone.data.types.MarketMetadataOrBuilder getMetadataOrBuilder() {
      if (metadataBuilder_ != null) {
        return metadataBuilder_.getMessageOrBuilder();
      } else {
        return metadata_ == null ?
            io.lightcone.data.types.MarketMetadata.getDefaultInstance() : metadata_;
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.MarketMetadata metadata = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.MarketMetadata, io.lightcone.data.types.MarketMetadata.Builder, io.lightcone.data.types.MarketMetadataOrBuilder> 
        getMetadataFieldBuilder() {
      if (metadataBuilder_ == null) {
        metadataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.lightcone.data.types.MarketMetadata, io.lightcone.data.types.MarketMetadata.Builder, io.lightcone.data.types.MarketMetadataOrBuilder>(
                getMetadata(),
                getParentForChildren(),
                isClean());
        metadata_ = null;
      }
      return metadataBuilder_;
    }

    private io.lightcone.data.types.MarketTicker ticker_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.MarketTicker, io.lightcone.data.types.MarketTicker.Builder, io.lightcone.data.types.MarketTickerOrBuilder> tickerBuilder_;
    /**
     * <code>optional .io.lightcone.data.types.MarketTicker ticker = 2;</code>
     */
    public boolean hasTicker() {
      return tickerBuilder_ != null || ticker_ != null;
    }
    /**
     * <code>optional .io.lightcone.data.types.MarketTicker ticker = 2;</code>
     */
    public io.lightcone.data.types.MarketTicker getTicker() {
      if (tickerBuilder_ == null) {
        return ticker_ == null ? io.lightcone.data.types.MarketTicker.getDefaultInstance() : ticker_;
      } else {
        return tickerBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.MarketTicker ticker = 2;</code>
     */
    public Builder setTicker(io.lightcone.data.types.MarketTicker value) {
      if (tickerBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ticker_ = value;
        onChanged();
      } else {
        tickerBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.MarketTicker ticker = 2;</code>
     */
    public Builder setTicker(
        io.lightcone.data.types.MarketTicker.Builder builderForValue) {
      if (tickerBuilder_ == null) {
        ticker_ = builderForValue.build();
        onChanged();
      } else {
        tickerBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.MarketTicker ticker = 2;</code>
     */
    public Builder mergeTicker(io.lightcone.data.types.MarketTicker value) {
      if (tickerBuilder_ == null) {
        if (ticker_ != null) {
          ticker_ =
            io.lightcone.data.types.MarketTicker.newBuilder(ticker_).mergeFrom(value).buildPartial();
        } else {
          ticker_ = value;
        }
        onChanged();
      } else {
        tickerBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.MarketTicker ticker = 2;</code>
     */
    public Builder clearTicker() {
      if (tickerBuilder_ == null) {
        ticker_ = null;
        onChanged();
      } else {
        ticker_ = null;
        tickerBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.MarketTicker ticker = 2;</code>
     */
    public io.lightcone.data.types.MarketTicker.Builder getTickerBuilder() {
      
      onChanged();
      return getTickerFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .io.lightcone.data.types.MarketTicker ticker = 2;</code>
     */
    public io.lightcone.data.types.MarketTickerOrBuilder getTickerOrBuilder() {
      if (tickerBuilder_ != null) {
        return tickerBuilder_.getMessageOrBuilder();
      } else {
        return ticker_ == null ?
            io.lightcone.data.types.MarketTicker.getDefaultInstance() : ticker_;
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.MarketTicker ticker = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.MarketTicker, io.lightcone.data.types.MarketTicker.Builder, io.lightcone.data.types.MarketTickerOrBuilder> 
        getTickerFieldBuilder() {
      if (tickerBuilder_ == null) {
        tickerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.lightcone.data.types.MarketTicker, io.lightcone.data.types.MarketTicker.Builder, io.lightcone.data.types.MarketTickerOrBuilder>(
                getTicker(),
                getParentForChildren(),
                isClean());
        ticker_ = null;
      }
      return tickerBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:io.lightcone.data.types.Market)
  }

  // @@protoc_insertion_point(class_scope:io.lightcone.data.types.Market)
  private static final io.lightcone.data.types.Market DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.lightcone.data.types.Market();
  }

  public static io.lightcone.data.types.Market getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Market>
      PARSER = new com.google.protobuf.AbstractParser<Market>() {
    public Market parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      try {
        return new Market(input, extensionRegistry);
      } catch (RuntimeException e) {
        if (e.getCause() instanceof
            com.google.protobuf.InvalidProtocolBufferException) {
          throw (com.google.protobuf.InvalidProtocolBufferException)
              e.getCause();
        }
        throw e;
      }
    }
  };

  public static com.google.protobuf.Parser<Market> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Market> getParserForType() {
    return PARSER;
  }

  public io.lightcone.data.types.Market getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

