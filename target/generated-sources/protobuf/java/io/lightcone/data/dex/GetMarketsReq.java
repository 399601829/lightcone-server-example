// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service_dex.proto

package io.lightcone.data.dex;

/**
 * Protobuf type {@code io.lightcone.data.dex.GetMarketsReq}
 */
public  final class GetMarketsReq extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:io.lightcone.data.dex.GetMarketsReq)
    GetMarketsReqOrBuilder {
  // Use GetMarketsReq.newBuilder() to construct.
  private GetMarketsReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private GetMarketsReq() {
    requireMetadata_ = false;
    requireTicker_ = false;
    queryLoopringTicker_ = false;
    quoteCurrencyForTicker_ = "";
    marketId_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private GetMarketsReq(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            requireMetadata_ = input.readBool();
            break;
          }
          case 16: {

            requireTicker_ = input.readBool();
            break;
          }
          case 24: {

            queryLoopringTicker_ = input.readBool();
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            quoteCurrencyForTicker_ = s;
            break;
          }
          case 40: {
            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
              marketId_ = new java.util.ArrayList<java.lang.Long>();
              mutable_bitField0_ |= 0x00000010;
            }
            marketId_.add(input.readUInt64());
            break;
          }
          case 42: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
              marketId_ = new java.util.ArrayList<java.lang.Long>();
              mutable_bitField0_ |= 0x00000010;
            }
            while (input.getBytesUntilLimit() > 0) {
              marketId_.add(input.readUInt64());
            }
            input.popLimit(limit);
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw new RuntimeException(e.setUnfinishedMessage(this));
    } catch (java.io.IOException e) {
      throw new RuntimeException(
          new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this));
    } finally {
      if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
        marketId_ = java.util.Collections.unmodifiableList(marketId_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.lightcone.data.dex.ServiceDex.internal_static_io_lightcone_data_dex_GetMarketsReq_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.lightcone.data.dex.ServiceDex.internal_static_io_lightcone_data_dex_GetMarketsReq_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.lightcone.data.dex.GetMarketsReq.class, io.lightcone.data.dex.GetMarketsReq.Builder.class);
  }

  private int bitField0_;
  public static final int REQUIRE_METADATA_FIELD_NUMBER = 1;
  private boolean requireMetadata_;
  /**
   * <code>optional bool require_metadata = 1;</code>
   */
  public boolean getRequireMetadata() {
    return requireMetadata_;
  }

  public static final int REQUIRE_TICKER_FIELD_NUMBER = 2;
  private boolean requireTicker_;
  /**
   * <code>optional bool require_ticker = 2;</code>
   */
  public boolean getRequireTicker() {
    return requireTicker_;
  }

  public static final int QUERY_LOOPRING_TICKER_FIELD_NUMBER = 3;
  private boolean queryLoopringTicker_;
  /**
   * <code>optional bool query_loopring_ticker = 3;</code>
   */
  public boolean getQueryLoopringTicker() {
    return queryLoopringTicker_;
  }

  public static final int QUOTE_CURRENCY_FOR_TICKER_FIELD_NUMBER = 4;
  private volatile java.lang.Object quoteCurrencyForTicker_;
  /**
   * <code>optional string quote_currency_for_ticker = 4;</code>
   *
   * <pre>
   * USD, RMB
   * </pre>
   */
  public java.lang.String getQuoteCurrencyForTicker() {
    java.lang.Object ref = quoteCurrencyForTicker_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      quoteCurrencyForTicker_ = s;
      return s;
    }
  }
  /**
   * <code>optional string quote_currency_for_ticker = 4;</code>
   *
   * <pre>
   * USD, RMB
   * </pre>
   */
  public com.google.protobuf.ByteString
      getQuoteCurrencyForTickerBytes() {
    java.lang.Object ref = quoteCurrencyForTicker_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      quoteCurrencyForTicker_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MARKET_ID_FIELD_NUMBER = 5;
  private java.util.List<java.lang.Long> marketId_;
  /**
   * <code>repeated uint64 market_id = 5;</code>
   *
   * <pre>
   * empty for query all
   * </pre>
   */
  public java.util.List<java.lang.Long>
      getMarketIdList() {
    return marketId_;
  }
  /**
   * <code>repeated uint64 market_id = 5;</code>
   *
   * <pre>
   * empty for query all
   * </pre>
   */
  public int getMarketIdCount() {
    return marketId_.size();
  }
  /**
   * <code>repeated uint64 market_id = 5;</code>
   *
   * <pre>
   * empty for query all
   * </pre>
   */
  public long getMarketId(int index) {
    return marketId_.get(index);
  }
  private int marketIdMemoizedSerializedSize = -1;

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (requireMetadata_ != false) {
      output.writeBool(1, requireMetadata_);
    }
    if (requireTicker_ != false) {
      output.writeBool(2, requireTicker_);
    }
    if (queryLoopringTicker_ != false) {
      output.writeBool(3, queryLoopringTicker_);
    }
    if (!getQuoteCurrencyForTickerBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessage.writeString(output, 4, quoteCurrencyForTicker_);
    }
    if (getMarketIdList().size() > 0) {
      output.writeRawVarint32(42);
      output.writeRawVarint32(marketIdMemoizedSerializedSize);
    }
    for (int i = 0; i < marketId_.size(); i++) {
      output.writeUInt64NoTag(marketId_.get(i));
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (requireMetadata_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, requireMetadata_);
    }
    if (requireTicker_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, requireTicker_);
    }
    if (queryLoopringTicker_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, queryLoopringTicker_);
    }
    if (!getQuoteCurrencyForTickerBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(4, quoteCurrencyForTicker_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < marketId_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeUInt64SizeNoTag(marketId_.get(i));
      }
      size += dataSize;
      if (!getMarketIdList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      marketIdMemoizedSerializedSize = dataSize;
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  public static io.lightcone.data.dex.GetMarketsReq parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.lightcone.data.dex.GetMarketsReq parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.lightcone.data.dex.GetMarketsReq parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.lightcone.data.dex.GetMarketsReq parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.lightcone.data.dex.GetMarketsReq parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static io.lightcone.data.dex.GetMarketsReq parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static io.lightcone.data.dex.GetMarketsReq parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static io.lightcone.data.dex.GetMarketsReq parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static io.lightcone.data.dex.GetMarketsReq parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static io.lightcone.data.dex.GetMarketsReq parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.lightcone.data.dex.GetMarketsReq prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code io.lightcone.data.dex.GetMarketsReq}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:io.lightcone.data.dex.GetMarketsReq)
      io.lightcone.data.dex.GetMarketsReqOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.lightcone.data.dex.ServiceDex.internal_static_io_lightcone_data_dex_GetMarketsReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.lightcone.data.dex.ServiceDex.internal_static_io_lightcone_data_dex_GetMarketsReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.lightcone.data.dex.GetMarketsReq.class, io.lightcone.data.dex.GetMarketsReq.Builder.class);
    }

    // Construct using io.lightcone.data.dex.GetMarketsReq.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      requireMetadata_ = false;

      requireTicker_ = false;

      queryLoopringTicker_ = false;

      quoteCurrencyForTicker_ = "";

      marketId_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000010);
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.lightcone.data.dex.ServiceDex.internal_static_io_lightcone_data_dex_GetMarketsReq_descriptor;
    }

    public io.lightcone.data.dex.GetMarketsReq getDefaultInstanceForType() {
      return io.lightcone.data.dex.GetMarketsReq.getDefaultInstance();
    }

    public io.lightcone.data.dex.GetMarketsReq build() {
      io.lightcone.data.dex.GetMarketsReq result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public io.lightcone.data.dex.GetMarketsReq buildPartial() {
      io.lightcone.data.dex.GetMarketsReq result = new io.lightcone.data.dex.GetMarketsReq(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.requireMetadata_ = requireMetadata_;
      result.requireTicker_ = requireTicker_;
      result.queryLoopringTicker_ = queryLoopringTicker_;
      result.quoteCurrencyForTicker_ = quoteCurrencyForTicker_;
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        marketId_ = java.util.Collections.unmodifiableList(marketId_);
        bitField0_ = (bitField0_ & ~0x00000010);
      }
      result.marketId_ = marketId_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.lightcone.data.dex.GetMarketsReq) {
        return mergeFrom((io.lightcone.data.dex.GetMarketsReq)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.lightcone.data.dex.GetMarketsReq other) {
      if (other == io.lightcone.data.dex.GetMarketsReq.getDefaultInstance()) return this;
      if (other.getRequireMetadata() != false) {
        setRequireMetadata(other.getRequireMetadata());
      }
      if (other.getRequireTicker() != false) {
        setRequireTicker(other.getRequireTicker());
      }
      if (other.getQueryLoopringTicker() != false) {
        setQueryLoopringTicker(other.getQueryLoopringTicker());
      }
      if (!other.getQuoteCurrencyForTicker().isEmpty()) {
        quoteCurrencyForTicker_ = other.quoteCurrencyForTicker_;
        onChanged();
      }
      if (!other.marketId_.isEmpty()) {
        if (marketId_.isEmpty()) {
          marketId_ = other.marketId_;
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          ensureMarketIdIsMutable();
          marketId_.addAll(other.marketId_);
        }
        onChanged();
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.lightcone.data.dex.GetMarketsReq parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.lightcone.data.dex.GetMarketsReq) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private boolean requireMetadata_ ;
    /**
     * <code>optional bool require_metadata = 1;</code>
     */
    public boolean getRequireMetadata() {
      return requireMetadata_;
    }
    /**
     * <code>optional bool require_metadata = 1;</code>
     */
    public Builder setRequireMetadata(boolean value) {
      
      requireMetadata_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bool require_metadata = 1;</code>
     */
    public Builder clearRequireMetadata() {
      
      requireMetadata_ = false;
      onChanged();
      return this;
    }

    private boolean requireTicker_ ;
    /**
     * <code>optional bool require_ticker = 2;</code>
     */
    public boolean getRequireTicker() {
      return requireTicker_;
    }
    /**
     * <code>optional bool require_ticker = 2;</code>
     */
    public Builder setRequireTicker(boolean value) {
      
      requireTicker_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bool require_ticker = 2;</code>
     */
    public Builder clearRequireTicker() {
      
      requireTicker_ = false;
      onChanged();
      return this;
    }

    private boolean queryLoopringTicker_ ;
    /**
     * <code>optional bool query_loopring_ticker = 3;</code>
     */
    public boolean getQueryLoopringTicker() {
      return queryLoopringTicker_;
    }
    /**
     * <code>optional bool query_loopring_ticker = 3;</code>
     */
    public Builder setQueryLoopringTicker(boolean value) {
      
      queryLoopringTicker_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bool query_loopring_ticker = 3;</code>
     */
    public Builder clearQueryLoopringTicker() {
      
      queryLoopringTicker_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object quoteCurrencyForTicker_ = "";
    /**
     * <code>optional string quote_currency_for_ticker = 4;</code>
     *
     * <pre>
     * USD, RMB
     * </pre>
     */
    public java.lang.String getQuoteCurrencyForTicker() {
      java.lang.Object ref = quoteCurrencyForTicker_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        quoteCurrencyForTicker_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>optional string quote_currency_for_ticker = 4;</code>
     *
     * <pre>
     * USD, RMB
     * </pre>
     */
    public com.google.protobuf.ByteString
        getQuoteCurrencyForTickerBytes() {
      java.lang.Object ref = quoteCurrencyForTicker_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        quoteCurrencyForTicker_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string quote_currency_for_ticker = 4;</code>
     *
     * <pre>
     * USD, RMB
     * </pre>
     */
    public Builder setQuoteCurrencyForTicker(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      quoteCurrencyForTicker_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string quote_currency_for_ticker = 4;</code>
     *
     * <pre>
     * USD, RMB
     * </pre>
     */
    public Builder clearQuoteCurrencyForTicker() {
      
      quoteCurrencyForTicker_ = getDefaultInstance().getQuoteCurrencyForTicker();
      onChanged();
      return this;
    }
    /**
     * <code>optional string quote_currency_for_ticker = 4;</code>
     *
     * <pre>
     * USD, RMB
     * </pre>
     */
    public Builder setQuoteCurrencyForTickerBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      quoteCurrencyForTicker_ = value;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Long> marketId_ = java.util.Collections.emptyList();
    private void ensureMarketIdIsMutable() {
      if (!((bitField0_ & 0x00000010) == 0x00000010)) {
        marketId_ = new java.util.ArrayList<java.lang.Long>(marketId_);
        bitField0_ |= 0x00000010;
       }
    }
    /**
     * <code>repeated uint64 market_id = 5;</code>
     *
     * <pre>
     * empty for query all
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getMarketIdList() {
      return java.util.Collections.unmodifiableList(marketId_);
    }
    /**
     * <code>repeated uint64 market_id = 5;</code>
     *
     * <pre>
     * empty for query all
     * </pre>
     */
    public int getMarketIdCount() {
      return marketId_.size();
    }
    /**
     * <code>repeated uint64 market_id = 5;</code>
     *
     * <pre>
     * empty for query all
     * </pre>
     */
    public long getMarketId(int index) {
      return marketId_.get(index);
    }
    /**
     * <code>repeated uint64 market_id = 5;</code>
     *
     * <pre>
     * empty for query all
     * </pre>
     */
    public Builder setMarketId(
        int index, long value) {
      ensureMarketIdIsMutable();
      marketId_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated uint64 market_id = 5;</code>
     *
     * <pre>
     * empty for query all
     * </pre>
     */
    public Builder addMarketId(long value) {
      ensureMarketIdIsMutable();
      marketId_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated uint64 market_id = 5;</code>
     *
     * <pre>
     * empty for query all
     * </pre>
     */
    public Builder addAllMarketId(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureMarketIdIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, marketId_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated uint64 market_id = 5;</code>
     *
     * <pre>
     * empty for query all
     * </pre>
     */
    public Builder clearMarketId() {
      marketId_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:io.lightcone.data.dex.GetMarketsReq)
  }

  // @@protoc_insertion_point(class_scope:io.lightcone.data.dex.GetMarketsReq)
  private static final io.lightcone.data.dex.GetMarketsReq DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.lightcone.data.dex.GetMarketsReq();
  }

  public static io.lightcone.data.dex.GetMarketsReq getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GetMarketsReq>
      PARSER = new com.google.protobuf.AbstractParser<GetMarketsReq>() {
    public GetMarketsReq parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      try {
        return new GetMarketsReq(input, extensionRegistry);
      } catch (RuntimeException e) {
        if (e.getCause() instanceof
            com.google.protobuf.InvalidProtocolBufferException) {
          throw (com.google.protobuf.InvalidProtocolBufferException)
              e.getCause();
        }
        throw e;
      }
    }
  };

  public static com.google.protobuf.Parser<GetMarketsReq> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GetMarketsReq> getParserForType() {
    return PARSER;
  }

  public io.lightcone.data.dex.GetMarketsReq getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

