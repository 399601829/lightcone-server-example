// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DexServiceImpl.proto

package io.lightcone.data.dex;

/**
 * Protobuf type {@code io.lightcone.data.dex.MarketTicker}
 */
public  final class MarketTicker extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:io.lightcone.data.dex.MarketTicker)
    MarketTickerOrBuilder {
  // Use MarketTicker.newBuilder() to construct.
  private MarketTicker(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private MarketTicker() {
    exchangeRate_ = 0D;
    price_ = 0D;
    volume24H_ = 0D;
    percentChange1H_ = 0D;
    percentChange24H_ = 0D;
    percentChange7D_ = 0D;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private MarketTicker(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            io.lightcone.data.types.TokenID.Builder subBuilder = null;
            if (baseTokenId_ != null) {
              subBuilder = baseTokenId_.toBuilder();
            }
            baseTokenId_ = input.readMessage(io.lightcone.data.types.TokenID.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(baseTokenId_);
              baseTokenId_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            io.lightcone.data.types.TokenID.Builder subBuilder = null;
            if (quoteTokenId_ != null) {
              subBuilder = quoteTokenId_.toBuilder();
            }
            quoteTokenId_ = input.readMessage(io.lightcone.data.types.TokenID.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(quoteTokenId_);
              quoteTokenId_ = subBuilder.buildPartial();
            }

            break;
          }
          case 25: {

            exchangeRate_ = input.readDouble();
            break;
          }
          case 33: {

            price_ = input.readDouble();
            break;
          }
          case 41: {

            volume24H_ = input.readDouble();
            break;
          }
          case 49: {

            percentChange1H_ = input.readDouble();
            break;
          }
          case 57: {

            percentChange24H_ = input.readDouble();
            break;
          }
          case 65: {

            percentChange7D_ = input.readDouble();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw new RuntimeException(e.setUnfinishedMessage(this));
    } catch (java.io.IOException e) {
      throw new RuntimeException(
          new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this));
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.lightcone.data.dex.ServiceDex.internal_static_io_lightcone_data_dex_MarketTicker_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.lightcone.data.dex.ServiceDex.internal_static_io_lightcone_data_dex_MarketTicker_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.lightcone.data.dex.MarketTicker.class, io.lightcone.data.dex.MarketTicker.Builder.class);
  }

  public static final int BASE_TOKEN_ID_FIELD_NUMBER = 1;
  private io.lightcone.data.types.TokenID baseTokenId_;
  /**
   * <code>optional .io.lightcone.data.types.TokenID base_token_id = 1;</code>
   *
   * <pre>
   * base token id
   * </pre>
   */
  public boolean hasBaseTokenId() {
    return baseTokenId_ != null;
  }
  /**
   * <code>optional .io.lightcone.data.types.TokenID base_token_id = 1;</code>
   *
   * <pre>
   * base token id
   * </pre>
   */
  public io.lightcone.data.types.TokenID getBaseTokenId() {
    return baseTokenId_ == null ? io.lightcone.data.types.TokenID.getDefaultInstance() : baseTokenId_;
  }
  /**
   * <code>optional .io.lightcone.data.types.TokenID base_token_id = 1;</code>
   *
   * <pre>
   * base token id
   * </pre>
   */
  public io.lightcone.data.types.TokenIDOrBuilder getBaseTokenIdOrBuilder() {
    return getBaseTokenId();
  }

  public static final int QUOTE_TOKEN_ID_FIELD_NUMBER = 2;
  private io.lightcone.data.types.TokenID quoteTokenId_;
  /**
   * <code>optional .io.lightcone.data.types.TokenID quote_token_id = 2;</code>
   *
   * <pre>
   * quote token id
   * </pre>
   */
  public boolean hasQuoteTokenId() {
    return quoteTokenId_ != null;
  }
  /**
   * <code>optional .io.lightcone.data.types.TokenID quote_token_id = 2;</code>
   *
   * <pre>
   * quote token id
   * </pre>
   */
  public io.lightcone.data.types.TokenID getQuoteTokenId() {
    return quoteTokenId_ == null ? io.lightcone.data.types.TokenID.getDefaultInstance() : quoteTokenId_;
  }
  /**
   * <code>optional .io.lightcone.data.types.TokenID quote_token_id = 2;</code>
   *
   * <pre>
   * quote token id
   * </pre>
   */
  public io.lightcone.data.types.TokenIDOrBuilder getQuoteTokenIdOrBuilder() {
    return getQuoteTokenId();
  }

  public static final int EXCHANGE_RATE_FIELD_NUMBER = 3;
  private double exchangeRate_;
  /**
   * <code>optional double exchange_rate = 3;</code>
   *
   * <pre>
   * exchange rate for base token to quote token
   * </pre>
   */
  public double getExchangeRate() {
    return exchangeRate_;
  }

  public static final int PRICE_FIELD_NUMBER = 4;
  private double price_;
  /**
   * <code>optional double price = 4;</code>
   *
   * <pre>
   * price of quote currency
   * </pre>
   */
  public double getPrice() {
    return price_;
  }

  public static final int VOLUME_24H_FIELD_NUMBER = 5;
  private double volume24H_;
  /**
   * <code>optional double volume_24h = 5;</code>
   *
   * <pre>
   * volume of quote token
   * </pre>
   */
  public double getVolume24H() {
    return volume24H_;
  }

  public static final int PERCENT_CHANGE_1H_FIELD_NUMBER = 6;
  private double percentChange1H_;
  /**
   * <code>optional double percent_change_1h = 6;</code>
   */
  public double getPercentChange1H() {
    return percentChange1H_;
  }

  public static final int PERCENT_CHANGE_24H_FIELD_NUMBER = 7;
  private double percentChange24H_;
  /**
   * <code>optional double percent_change_24h = 7;</code>
   */
  public double getPercentChange24H() {
    return percentChange24H_;
  }

  public static final int PERCENT_CHANGE_7D_FIELD_NUMBER = 8;
  private double percentChange7D_;
  /**
   * <code>optional double percent_change_7d = 8;</code>
   */
  public double getPercentChange7D() {
    return percentChange7D_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (baseTokenId_ != null) {
      output.writeMessage(1, getBaseTokenId());
    }
    if (quoteTokenId_ != null) {
      output.writeMessage(2, getQuoteTokenId());
    }
    if (exchangeRate_ != 0D) {
      output.writeDouble(3, exchangeRate_);
    }
    if (price_ != 0D) {
      output.writeDouble(4, price_);
    }
    if (volume24H_ != 0D) {
      output.writeDouble(5, volume24H_);
    }
    if (percentChange1H_ != 0D) {
      output.writeDouble(6, percentChange1H_);
    }
    if (percentChange24H_ != 0D) {
      output.writeDouble(7, percentChange24H_);
    }
    if (percentChange7D_ != 0D) {
      output.writeDouble(8, percentChange7D_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (baseTokenId_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getBaseTokenId());
    }
    if (quoteTokenId_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getQuoteTokenId());
    }
    if (exchangeRate_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(3, exchangeRate_);
    }
    if (price_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(4, price_);
    }
    if (volume24H_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(5, volume24H_);
    }
    if (percentChange1H_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(6, percentChange1H_);
    }
    if (percentChange24H_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(7, percentChange24H_);
    }
    if (percentChange7D_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(8, percentChange7D_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  public static io.lightcone.data.dex.MarketTicker parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.lightcone.data.dex.MarketTicker parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.lightcone.data.dex.MarketTicker parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.lightcone.data.dex.MarketTicker parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.lightcone.data.dex.MarketTicker parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static io.lightcone.data.dex.MarketTicker parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static io.lightcone.data.dex.MarketTicker parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static io.lightcone.data.dex.MarketTicker parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static io.lightcone.data.dex.MarketTicker parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static io.lightcone.data.dex.MarketTicker parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.lightcone.data.dex.MarketTicker prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code io.lightcone.data.dex.MarketTicker}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:io.lightcone.data.dex.MarketTicker)
      io.lightcone.data.dex.MarketTickerOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.lightcone.data.dex.ServiceDex.internal_static_io_lightcone_data_dex_MarketTicker_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.lightcone.data.dex.ServiceDex.internal_static_io_lightcone_data_dex_MarketTicker_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.lightcone.data.dex.MarketTicker.class, io.lightcone.data.dex.MarketTicker.Builder.class);
    }

    // Construct using io.lightcone.data.dex.MarketTicker.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      if (baseTokenIdBuilder_ == null) {
        baseTokenId_ = null;
      } else {
        baseTokenId_ = null;
        baseTokenIdBuilder_ = null;
      }
      if (quoteTokenIdBuilder_ == null) {
        quoteTokenId_ = null;
      } else {
        quoteTokenId_ = null;
        quoteTokenIdBuilder_ = null;
      }
      exchangeRate_ = 0D;

      price_ = 0D;

      volume24H_ = 0D;

      percentChange1H_ = 0D;

      percentChange24H_ = 0D;

      percentChange7D_ = 0D;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.lightcone.data.dex.ServiceDex.internal_static_io_lightcone_data_dex_MarketTicker_descriptor;
    }

    public io.lightcone.data.dex.MarketTicker getDefaultInstanceForType() {
      return io.lightcone.data.dex.MarketTicker.getDefaultInstance();
    }

    public io.lightcone.data.dex.MarketTicker build() {
      io.lightcone.data.dex.MarketTicker result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public io.lightcone.data.dex.MarketTicker buildPartial() {
      io.lightcone.data.dex.MarketTicker result = new io.lightcone.data.dex.MarketTicker(this);
      if (baseTokenIdBuilder_ == null) {
        result.baseTokenId_ = baseTokenId_;
      } else {
        result.baseTokenId_ = baseTokenIdBuilder_.build();
      }
      if (quoteTokenIdBuilder_ == null) {
        result.quoteTokenId_ = quoteTokenId_;
      } else {
        result.quoteTokenId_ = quoteTokenIdBuilder_.build();
      }
      result.exchangeRate_ = exchangeRate_;
      result.price_ = price_;
      result.volume24H_ = volume24H_;
      result.percentChange1H_ = percentChange1H_;
      result.percentChange24H_ = percentChange24H_;
      result.percentChange7D_ = percentChange7D_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.lightcone.data.dex.MarketTicker) {
        return mergeFrom((io.lightcone.data.dex.MarketTicker)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.lightcone.data.dex.MarketTicker other) {
      if (other == io.lightcone.data.dex.MarketTicker.getDefaultInstance()) return this;
      if (other.hasBaseTokenId()) {
        mergeBaseTokenId(other.getBaseTokenId());
      }
      if (other.hasQuoteTokenId()) {
        mergeQuoteTokenId(other.getQuoteTokenId());
      }
      if (other.getExchangeRate() != 0D) {
        setExchangeRate(other.getExchangeRate());
      }
      if (other.getPrice() != 0D) {
        setPrice(other.getPrice());
      }
      if (other.getVolume24H() != 0D) {
        setVolume24H(other.getVolume24H());
      }
      if (other.getPercentChange1H() != 0D) {
        setPercentChange1H(other.getPercentChange1H());
      }
      if (other.getPercentChange24H() != 0D) {
        setPercentChange24H(other.getPercentChange24H());
      }
      if (other.getPercentChange7D() != 0D) {
        setPercentChange7D(other.getPercentChange7D());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.lightcone.data.dex.MarketTicker parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.lightcone.data.dex.MarketTicker) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private io.lightcone.data.types.TokenID baseTokenId_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.TokenID, io.lightcone.data.types.TokenID.Builder, io.lightcone.data.types.TokenIDOrBuilder> baseTokenIdBuilder_;
    /**
     * <code>optional .io.lightcone.data.types.TokenID base_token_id = 1;</code>
     *
     * <pre>
     * base token id
     * </pre>
     */
    public boolean hasBaseTokenId() {
      return baseTokenIdBuilder_ != null || baseTokenId_ != null;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID base_token_id = 1;</code>
     *
     * <pre>
     * base token id
     * </pre>
     */
    public io.lightcone.data.types.TokenID getBaseTokenId() {
      if (baseTokenIdBuilder_ == null) {
        return baseTokenId_ == null ? io.lightcone.data.types.TokenID.getDefaultInstance() : baseTokenId_;
      } else {
        return baseTokenIdBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID base_token_id = 1;</code>
     *
     * <pre>
     * base token id
     * </pre>
     */
    public Builder setBaseTokenId(io.lightcone.data.types.TokenID value) {
      if (baseTokenIdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        baseTokenId_ = value;
        onChanged();
      } else {
        baseTokenIdBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID base_token_id = 1;</code>
     *
     * <pre>
     * base token id
     * </pre>
     */
    public Builder setBaseTokenId(
        io.lightcone.data.types.TokenID.Builder builderForValue) {
      if (baseTokenIdBuilder_ == null) {
        baseTokenId_ = builderForValue.build();
        onChanged();
      } else {
        baseTokenIdBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID base_token_id = 1;</code>
     *
     * <pre>
     * base token id
     * </pre>
     */
    public Builder mergeBaseTokenId(io.lightcone.data.types.TokenID value) {
      if (baseTokenIdBuilder_ == null) {
        if (baseTokenId_ != null) {
          baseTokenId_ =
            io.lightcone.data.types.TokenID.newBuilder(baseTokenId_).mergeFrom(value).buildPartial();
        } else {
          baseTokenId_ = value;
        }
        onChanged();
      } else {
        baseTokenIdBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID base_token_id = 1;</code>
     *
     * <pre>
     * base token id
     * </pre>
     */
    public Builder clearBaseTokenId() {
      if (baseTokenIdBuilder_ == null) {
        baseTokenId_ = null;
        onChanged();
      } else {
        baseTokenId_ = null;
        baseTokenIdBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID base_token_id = 1;</code>
     *
     * <pre>
     * base token id
     * </pre>
     */
    public io.lightcone.data.types.TokenID.Builder getBaseTokenIdBuilder() {

      onChanged();
      return getBaseTokenIdFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID base_token_id = 1;</code>
     *
     * <pre>
     * base token id
     * </pre>
     */
    public io.lightcone.data.types.TokenIDOrBuilder getBaseTokenIdOrBuilder() {
      if (baseTokenIdBuilder_ != null) {
        return baseTokenIdBuilder_.getMessageOrBuilder();
      } else {
        return baseTokenId_ == null ?
            io.lightcone.data.types.TokenID.getDefaultInstance() : baseTokenId_;
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID base_token_id = 1;</code>
     *
     * <pre>
     * base token id
     * </pre>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.TokenID, io.lightcone.data.types.TokenID.Builder, io.lightcone.data.types.TokenIDOrBuilder>
        getBaseTokenIdFieldBuilder() {
      if (baseTokenIdBuilder_ == null) {
        baseTokenIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.lightcone.data.types.TokenID, io.lightcone.data.types.TokenID.Builder, io.lightcone.data.types.TokenIDOrBuilder>(
                getBaseTokenId(),
                getParentForChildren(),
                isClean());
        baseTokenId_ = null;
      }
      return baseTokenIdBuilder_;
    }

    private io.lightcone.data.types.TokenID quoteTokenId_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.TokenID, io.lightcone.data.types.TokenID.Builder, io.lightcone.data.types.TokenIDOrBuilder> quoteTokenIdBuilder_;
    /**
     * <code>optional .io.lightcone.data.types.TokenID quote_token_id = 2;</code>
     *
     * <pre>
     * quote token id
     * </pre>
     */
    public boolean hasQuoteTokenId() {
      return quoteTokenIdBuilder_ != null || quoteTokenId_ != null;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID quote_token_id = 2;</code>
     *
     * <pre>
     * quote token id
     * </pre>
     */
    public io.lightcone.data.types.TokenID getQuoteTokenId() {
      if (quoteTokenIdBuilder_ == null) {
        return quoteTokenId_ == null ? io.lightcone.data.types.TokenID.getDefaultInstance() : quoteTokenId_;
      } else {
        return quoteTokenIdBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID quote_token_id = 2;</code>
     *
     * <pre>
     * quote token id
     * </pre>
     */
    public Builder setQuoteTokenId(io.lightcone.data.types.TokenID value) {
      if (quoteTokenIdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        quoteTokenId_ = value;
        onChanged();
      } else {
        quoteTokenIdBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID quote_token_id = 2;</code>
     *
     * <pre>
     * quote token id
     * </pre>
     */
    public Builder setQuoteTokenId(
        io.lightcone.data.types.TokenID.Builder builderForValue) {
      if (quoteTokenIdBuilder_ == null) {
        quoteTokenId_ = builderForValue.build();
        onChanged();
      } else {
        quoteTokenIdBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID quote_token_id = 2;</code>
     *
     * <pre>
     * quote token id
     * </pre>
     */
    public Builder mergeQuoteTokenId(io.lightcone.data.types.TokenID value) {
      if (quoteTokenIdBuilder_ == null) {
        if (quoteTokenId_ != null) {
          quoteTokenId_ =
            io.lightcone.data.types.TokenID.newBuilder(quoteTokenId_).mergeFrom(value).buildPartial();
        } else {
          quoteTokenId_ = value;
        }
        onChanged();
      } else {
        quoteTokenIdBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID quote_token_id = 2;</code>
     *
     * <pre>
     * quote token id
     * </pre>
     */
    public Builder clearQuoteTokenId() {
      if (quoteTokenIdBuilder_ == null) {
        quoteTokenId_ = null;
        onChanged();
      } else {
        quoteTokenId_ = null;
        quoteTokenIdBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID quote_token_id = 2;</code>
     *
     * <pre>
     * quote token id
     * </pre>
     */
    public io.lightcone.data.types.TokenID.Builder getQuoteTokenIdBuilder() {

      onChanged();
      return getQuoteTokenIdFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID quote_token_id = 2;</code>
     *
     * <pre>
     * quote token id
     * </pre>
     */
    public io.lightcone.data.types.TokenIDOrBuilder getQuoteTokenIdOrBuilder() {
      if (quoteTokenIdBuilder_ != null) {
        return quoteTokenIdBuilder_.getMessageOrBuilder();
      } else {
        return quoteTokenId_ == null ?
            io.lightcone.data.types.TokenID.getDefaultInstance() : quoteTokenId_;
      }
    }
    /**
     * <code>optional .io.lightcone.data.types.TokenID quote_token_id = 2;</code>
     *
     * <pre>
     * quote token id
     * </pre>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.lightcone.data.types.TokenID, io.lightcone.data.types.TokenID.Builder, io.lightcone.data.types.TokenIDOrBuilder>
        getQuoteTokenIdFieldBuilder() {
      if (quoteTokenIdBuilder_ == null) {
        quoteTokenIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.lightcone.data.types.TokenID, io.lightcone.data.types.TokenID.Builder, io.lightcone.data.types.TokenIDOrBuilder>(
                getQuoteTokenId(),
                getParentForChildren(),
                isClean());
        quoteTokenId_ = null;
      }
      return quoteTokenIdBuilder_;
    }

    private double exchangeRate_ ;
    /**
     * <code>optional double exchange_rate = 3;</code>
     *
     * <pre>
     * exchange rate for base token to quote token
     * </pre>
     */
    public double getExchangeRate() {
      return exchangeRate_;
    }
    /**
     * <code>optional double exchange_rate = 3;</code>
     *
     * <pre>
     * exchange rate for base token to quote token
     * </pre>
     */
    public Builder setExchangeRate(double value) {

      exchangeRate_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional double exchange_rate = 3;</code>
     *
     * <pre>
     * exchange rate for base token to quote token
     * </pre>
     */
    public Builder clearExchangeRate() {

      exchangeRate_ = 0D;
      onChanged();
      return this;
    }

    private double price_ ;
    /**
     * <code>optional double price = 4;</code>
     *
     * <pre>
     * price of quote currency
     * </pre>
     */
    public double getPrice() {
      return price_;
    }
    /**
     * <code>optional double price = 4;</code>
     *
     * <pre>
     * price of quote currency
     * </pre>
     */
    public Builder setPrice(double value) {

      price_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional double price = 4;</code>
     *
     * <pre>
     * price of quote currency
     * </pre>
     */
    public Builder clearPrice() {

      price_ = 0D;
      onChanged();
      return this;
    }

    private double volume24H_ ;
    /**
     * <code>optional double volume_24h = 5;</code>
     *
     * <pre>
     * volume of quote token
     * </pre>
     */
    public double getVolume24H() {
      return volume24H_;
    }
    /**
     * <code>optional double volume_24h = 5;</code>
     *
     * <pre>
     * volume of quote token
     * </pre>
     */
    public Builder setVolume24H(double value) {

      volume24H_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional double volume_24h = 5;</code>
     *
     * <pre>
     * volume of quote token
     * </pre>
     */
    public Builder clearVolume24H() {

      volume24H_ = 0D;
      onChanged();
      return this;
    }

    private double percentChange1H_ ;
    /**
     * <code>optional double percent_change_1h = 6;</code>
     */
    public double getPercentChange1H() {
      return percentChange1H_;
    }
    /**
     * <code>optional double percent_change_1h = 6;</code>
     */
    public Builder setPercentChange1H(double value) {

      percentChange1H_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional double percent_change_1h = 6;</code>
     */
    public Builder clearPercentChange1H() {

      percentChange1H_ = 0D;
      onChanged();
      return this;
    }

    private double percentChange24H_ ;
    /**
     * <code>optional double percent_change_24h = 7;</code>
     */
    public double getPercentChange24H() {
      return percentChange24H_;
    }
    /**
     * <code>optional double percent_change_24h = 7;</code>
     */
    public Builder setPercentChange24H(double value) {

      percentChange24H_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional double percent_change_24h = 7;</code>
     */
    public Builder clearPercentChange24H() {

      percentChange24H_ = 0D;
      onChanged();
      return this;
    }

    private double percentChange7D_ ;
    /**
     * <code>optional double percent_change_7d = 8;</code>
     */
    public double getPercentChange7D() {
      return percentChange7D_;
    }
    /**
     * <code>optional double percent_change_7d = 8;</code>
     */
    public Builder setPercentChange7D(double value) {

      percentChange7D_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional double percent_change_7d = 8;</code>
     */
    public Builder clearPercentChange7D() {

      percentChange7D_ = 0D;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:io.lightcone.data.dex.MarketTicker)
  }

  // @@protoc_insertion_point(class_scope:io.lightcone.data.dex.MarketTicker)
  private static final io.lightcone.data.dex.MarketTicker DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.lightcone.data.dex.MarketTicker();
  }

  public static io.lightcone.data.dex.MarketTicker getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MarketTicker>
      PARSER = new com.google.protobuf.AbstractParser<MarketTicker>() {
    public MarketTicker parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      try {
        return new MarketTicker(input, extensionRegistry);
      } catch (RuntimeException e) {
        if (e.getCause() instanceof
            com.google.protobuf.InvalidProtocolBufferException) {
          throw (com.google.protobuf.InvalidProtocolBufferException)
              e.getCause();
        }
        throw e;
      }
    }
  };

  public static com.google.protobuf.Parser<MarketTicker> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MarketTicker> getParserForType() {
    return PARSER;
  }

  public io.lightcone.data.dex.MarketTicker getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

